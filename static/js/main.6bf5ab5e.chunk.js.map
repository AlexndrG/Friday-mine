{"version":3,"sources":["components/c2-pages/Login/Login.module.css","components/c2-pages/Profile/Profile.module.css","components/c2-pages/PwdNew/PwdNew.module.css","components/c2-pages/PwdRestore/PwdRestore.module.css","components/c2-pages/Register/Register.module.css","components/c2-pages/Packs/Packs.module.css","components/PacksPerPage/PacksPerPage.module.css","components/c2-pages/Error404/Error404.module.css","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.module.css","components/c1-common/c1-SuperInputText/SuperInputText.module.css","components/c1-common/c2-SuperButton/SuperButton.module.css","components/c1-common/c3-SuperCheckbox/SuperCheckbox.module.css","components/Loader/Loader.module.css","components/MyPacksCheckBox/MyPacksCheckBox.module.css","components/Paginator/Paginator.module.css","components/c1-common/c91-SuperNavLink/SuperNavLink.module.css","components/c2-pages/Error404/Error404.tsx","components/c2-pages/Profile/avatar.jpg","components/c1-common/c2-SuperButton/SuperButton.tsx","components/Loader/loader.gif","components/Loader/Loader.tsx","components/c1-common/c1-SuperInputText/SuperInputText.tsx","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.tsx","components/c2-pages/Profile/Profile.tsx","dal/instance.ts","dal/auth-api.ts","bll/appReducer.ts","bll/profileReducer.ts","components/c2-pages/Profile/ProfileContainer.tsx","components/c2-pages/PwdRestore/PwdRestore.tsx","bll/passwordRestoreReducer.ts","components/c2-pages/PwdRestore/PwdRestoreContainer.tsx","components/c2-pages/Login/Login.tsx","bll/loginReducer.ts","components/c2-pages/Login/LoginContainer.tsx","components/c2-pages/Register/Register.tsx","bll/registerReducer.ts","components/c2-pages/Register/RegisterContainer.tsx","components/c2-pages/PwdNew/PwdNew.tsx","bll/passwordNewReducer.ts","components/c2-pages/PwdNew/PwdNewContainer.tsx","components/TableLinePack/TableLinePack.tsx","dal/packs-api.ts","bll/packsReducer.ts","components/PacksPerPage/PacksPerPage.tsx","components/c1-common/c3-SuperCheckbox/SuperCheckbox.tsx","components/MyPacksCheckBox/MyPacksCheckBox.tsx","components/Paginator/Paginator.tsx","components/c2-pages/Packs/Packs.tsx","components/c2-pages/Packs/PacksContainer.tsx","components/c2-pages/Routes/Routes.tsx","components/c1-common/c91-SuperNavLink/SuperNavLink.tsx","components/Header/Header.tsx","App.tsx","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","error","text","image","src","alt","SuperButton","red","restProps","finalClassName","default","Loader","loader","loadingPicture","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","type","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","editableSpan","pen","Profile","props","main","form","item","photo","ifImgError","avatar","avatarDefault","onError","setIfImgErrorHandler","email","newName","nameChangeText","disabled","isBusy","size","newAvatar","avatarChangeText","onClick","changePress","profileChanged","logoutPress","instance","axios","create","baseURL","withCredentials","authAPI","post","password","rememberMe","delete","name","put","from","message","resetPasswordToken","initialState","isInitialized","isLogined","userData","setAppBusyAC","setAppErrorAC","errorText","setUserDataAC","ProfileContainer","useSelector","state","app","dispatch","useDispatch","setNewName","setNewAvatar","setIfImgError","setProfileChanged","useEffect","then","response","data","updatedUser","catch","finally","changeProfileTC","to","PwdRestore","emailChange","restorePress","isRestoring","setIsRestoringAC","PwdRestoreContainer","passwordRestore","setEmail","pwdRestoreTC","Login","passwordChange","checked","rememberMeChange","loginPress","loginAsIgnatPress","loginTC","LoginContainer","setPassword","setRememberMe","Register","password2","password2Change","registerPress","isRegistered","setRegisteredAC","RegisterContainer","register","setPassword2","registerTC","PwdNew","newPress","isPwdNew","setPwdNewAC","PwdNewContainer","passwordNew","token","useParams","pwdNewTC","TableLinePack","tableStyle","borderWidth","borderStyle","borderColor","width","cellStyle","padding","head","textAlign","style","nameFieldName","nameFieldLink","cardsCountField","updatedField","buttonsFieldName","buttonsFieldButtons","packsAPI","get","params","newPack","cardsPack","id","updatePack","requestData","packName","min","max","sortPacks","page","pageCount","user_id","packsData","setCurrentPageAC","pageNumber","getPacksTC","getState","packs","perPageArr","PacksPerPage","itemText","map","p","itemActive","setPacksPerPageAC","SuperCheckbox","onChangeChecked","checkbox","MyPacksCheckBox","_id","requestUserId","setMyPacksCheckBoxAC","pageButtons","pageButtonsTitle","Paginator","cardPacksTotalCount","packsPerPage","currentPage","totalPages","Math","ceil","pageFunctions","pageDisables","b","i","title","Packs","addPress","cardPacks","c","cardsCount","updated","delPress","userId","updatePress","footBlocks","footBlockLeft","footBlockRight","PacksContainer","delPackTC","PATH","Routes","path","exact","render","SuperNavLink","goTo","margin","border","Header","color","App","reducers","combineReducers","action","login","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bf5ab5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__2pv3y\",\"form\":\"Login_form__J68WB\",\"item\":\"Login_item__3yq4G\",\"error\":\"Login_error__3lSpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__1iK2v\",\"form\":\"Profile_form__2Irhk\",\"photo\":\"Profile_photo__1Mrgm\",\"item\":\"Profile_item__2s20o\",\"error\":\"Profile_error__aQEnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PwdNew_main__28vTm\",\"form\":\"PwdNew_form__-Zxba\",\"item\":\"PwdNew_item__107fN\",\"error\":\"PwdNew_error__1qOcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PwdRestore_main__2WL3I\",\"form\":\"PwdRestore_form__2Zrwb\",\"item\":\"PwdRestore_item__16XhF\",\"error\":\"PwdRestore_error__IJ61m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Register_main__iR9HC\",\"form\":\"Register_form__2bOF2\",\"item\":\"Register_item__1te8c\",\"error\":\"Register_error__3uYTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__22Aih\",\"form\":\"Packs_form__1yklS\",\"item\":\"Packs_item__1LZfA\",\"footBlocks\":\"Packs_footBlocks__2bU8N\",\"footBlockLeft\":\"Packs_footBlockLeft__2Rr9q\",\"footBlockRight\":\"Packs_footBlockRight__1jqnr\",\"error\":\"Packs_error__2XKGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PacksPerPage_main__1GbJb\",\"form\":\"PacksPerPage_form__p55np\",\"itemText\":\"PacksPerPage_itemText__2hb-E\",\"item\":\"PacksPerPage_item__3vmB7\",\"itemActive\":\"PacksPerPage_itemActive__3thKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2seUt\",\"text\":\"Error404_text__3vJJY\",\"image\":\"Error404_image__2JRYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pen\":\"SuperEditableSpan_pen__37tAy\",\"spanParameter\":\"SuperEditableSpan_spanParameter__3KV6Z\",\"editableSpan\":\"SuperEditableSpan_editableSpan__2mEG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2AxW5\",\"errorInput\":\"SuperInputText_errorInput__20jP4\",\"error\":\"SuperInputText_error__rhMt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1A3oo\",\"red\":\"SuperButton_red__3CQpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__16WQn\",\"spanClassName\":\"SuperCheckbox_spanClassName__TOXu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2rfiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MyPacksCheckBox_form__3_fVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Paginator_form__2QBNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SuperNavLink_item__sVmEG\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport function Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.text}>\r\n                404<br/>\r\n                Sorry...\r\n            </div>\r\n\r\n            <img className={s.image} src={'https://images-na.ssl-images-amazon.com/images/I/51yEw1u0HqL._AC_SY1000_.jpg'} alt={'turd'}/>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar.f463a804.jpg\";","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }) => {\r\n\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","export default __webpack_public_path__ + \"static/media/loader.b6485230.gif\";","import React from 'react';\r\nimport s from './Loader.module.css'\r\nimport loadingPicture from './loader.gif'\r\n\r\nexport function Loader() {\r\n    return <img className={s.loader} src={loadingPicture}/>\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\n\r\nimport s from './SuperEditableSpan.module.css'\r\nimport SuperInputText from '../c1-SuperInputText/SuperInputText';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n    // const spanClassName = `${s.editableSpan}`\r\n    const spanClassName =\r\n        `${s.editableSpan}\r\n         ${restProps.spanClassName ? s[restProps.spanClassName] : ''}\r\n         ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <div>\r\n                        <img\r\n                            className={s.pen}\r\n                            // src='https://cdn.shopify.com/s/files/1/0573/7352/4157/products/94.png'\r\n                            src='https://iconarchive.com/download/i96727/iconsmind/outline/Pen.ico'\r\n                            alt='pen'\r\n                        />\r\n\r\n                        <span\r\n                            onDoubleClick={onDoubleClickCallBack}\r\n                            className={spanClassName}\r\n\r\n                            {...restSpanProps}\r\n                        >\r\n                            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                            {children || restProps.value}\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport avatarDefault from './avatar.jpg'\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\nimport SuperEditableSpan from '../../c1-common/c4-SuperEditableSpan/SuperEditableSpan';\r\n\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    error: string\r\n    email: string\r\n    avatar: string\r\n    newName: string\r\n    newAvatar: string\r\n\r\n    nameChangeText: (value: string) => void\r\n    avatarChangeText: (value: string) => void\r\n    changePress: () => void\r\n    logoutPress: () => void\r\n\r\n    ifImgError: string\r\n    setIfImgErrorHandler: () => void\r\n\r\n    profileChanged: boolean\r\n}\r\n\r\nexport function Profile(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Profile</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <img\r\n                        className={s.photo}\r\n                        src={props.ifImgError || props.avatar || avatarDefault}\r\n                        onError={props.setIfImgErrorHandler}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <b>Email:</b>{` ${props.email}`}\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <b>Name:</b>\r\n                    <div>\r\n                        <SuperEditableSpan\r\n                            value={props.newName}\r\n                            onChangeText={props.nameChangeText}\r\n                            disabled={props.isBusy}\r\n                            size={50}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <b>Avatar link:</b>\r\n                    <div>\r\n                        <SuperEditableSpan\r\n                            value={props.newAvatar}\r\n                            onChangeText={props.avatarChangeText}\r\n                            disabled={props.isBusy}\r\n                            size={75}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.changePress}\r\n                        disabled={!props.profileChanged || props.isBusy}\r\n                    >\r\n                        Change profile\r\n                    </SuperButton>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.logoutPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Logout\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\n// Test mode\r\n// const baseURL = 'http://localhost:7542/2.0/'\r\n// Normal mode\r\nconst baseURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n})","import {instance} from './instance';\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<LoginResponseType>('auth/me', {});\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe});\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>('auth/me');\r\n    },\r\n\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>('auth/register', {email, password});\r\n    },\r\n\r\n    editProfile(name: string, avatar: string) {\r\n        return instance.put<EditProfileResponseType>('auth/me', {name, avatar});\r\n    },\r\n\r\n    pwdRestore(email: string) {\r\n        return instance.post<PwdRestoreResponseType>('auth/forgot', {email, from, message});\r\n    },\r\n\r\n    pwdNew(password: string, resetPasswordToken: string) {\r\n        return instance.post<PwdNewResponseType>('auth/set-new-password', {password, resetPasswordToken});\r\n    },\r\n}\r\n\r\n\r\nexport type PwdNewResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\n\r\nexport type PwdRestoreResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nconst from = 'test-front-admin <ai73a@yandex.by>'\r\nconst message = `<div>Password recovery link: <a href='https://alexndrg.github.io/Friday-mine/#/pwd-new/$token$'>Password recovery link</a></div>`\r\n\r\n\r\nexport type EditProfileResponseType = {\r\n    updatedUser: LoginResponseType\r\n    error?: string\r\n}\r\n\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // количество колод\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean            // подтвердил ли почту\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\n\r\ntype RegisterResponseType = {\r\n    error?: string\r\n}\r\n\r\n\r\nexport type LogoutResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n","import {Dispatch} from 'redux';\nimport {authAPI, LoginResponseType} from '../dal/auth-api';\n\nconst initialState = {\n    isInitialized: false,\n    isBusy: false,\n    error: '',\n    isLogined: false,\n    userData: {} as LoginResponseType,\n}\ntype StateType = typeof initialState\n\n\nexport function appReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'APP/SET-INITIALIZED':\n            return {\n                ...state,\n                isInitialized: true,\n            }\n\n        case 'APP/SET-BUSY':\n            return {\n                ...state,\n                isBusy: action.value,\n            }\n\n        case 'APP/SET-ERROR':\n            return {\n                ...state,\n                error: action.errorText,\n            }\n\n        case 'APP/SET-LOGIN':\n            return {\n                ...state,\n                isLogined: action.value,\n            }\n\n        case 'APP/SET-USER-DATA':\n            return {\n                ...state,\n                isLogined: true,\n                userData: {...action.userData},\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setAppInitializedAC = () => ({type: 'APP/SET-INITIALIZED'} as const)\nexport const setAppBusyAC = (value: boolean) => ({type: 'APP/SET-BUSY', value} as const)\nexport const setAppErrorAC = (errorText: string) => ({type: 'APP/SET-ERROR', errorText} as const)\nexport const setAppLoginAC = (value: boolean) => ({type: 'APP/SET-LOGIN', value} as const)\nexport const setUserDataAC = (userData: LoginResponseType) => ({type: 'APP/SET-USER-DATA', userData} as const)\n\nexport const initializeTC = () => (dispatch: Dispatch) => {\n    authAPI.me()\n        .then(response => {\n            dispatch(setUserDataAC(response.data))\n        })\n        .catch(error => {\n\n        })\n        .finally(() => {\n            dispatch(setAppInitializedAC())\n        })\n}\n\ntype ActionType =\n    | ReturnType<typeof setAppInitializedAC>\n    | ReturnType<typeof setAppBusyAC>\n    | ReturnType<typeof setAppErrorAC>\n    | ReturnType<typeof setAppLoginAC>\n    | ReturnType<typeof setUserDataAC>","import {Dispatch} from 'redux';\nimport {setAppBusyAC, setAppErrorAC, setAppLoginAC, setUserDataAC} from './appReducer';\nimport {authAPI} from '../dal/auth-api';\n\nconst initialState = {\n}\ntype StateType = typeof initialState\n\n\nexport function profileReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}\n\nexport const changeProfileTC = (name: string, avatar: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.editProfile(name, avatar)\n        .then(response => {\n            dispatch(setUserDataAC(response.data.updatedUser))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\nexport const logoutTC = () => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.logout()\n        .then(response => {\n            dispatch(setAppLoginAC(false))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\ntype ActionType = any\n","import React, {useEffect, useState} from 'react';\r\nimport avatarDefault from './avatar.jpg'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {LoginResponseType} from '../../../dal/auth-api';\r\nimport {Profile} from './Profile';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {changeProfileTC, logoutTC} from '../../../bll/profileReducer';\r\n\r\n\r\nexport function ProfileContainer() {\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const {email, name, avatar} = useSelector<AppRootStateType, LoginResponseType>(state => state.app.userData)\r\n    const dispatch = useDispatch()\r\n\r\n    const [newName, setNewName] = useState(name)\r\n    const [newAvatar, setNewAvatar] = useState(avatar || 'none')\r\n\r\n    const [ifImgError, setIfImgError] = useState('')\r\n\r\n    const [profileChanged, setProfileChanged] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setIfImgError(avatar => '')\r\n    }, [avatar])\r\n\r\n    const nameChangeText = (value: string) => {\r\n        setProfileChanged(true)\r\n        setNewName(value)\r\n    }\r\n\r\n    const avatarChangeText = (value: string) => {\r\n        setProfileChanged(true)\r\n        setNewAvatar(value)\r\n    }\r\n\r\n\r\n    const changePress = () => {\r\n        dispatch(changeProfileTC(newName, newAvatar))\r\n        setProfileChanged(false)\r\n    }\r\n\r\n    const logoutPress = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    const setIfImgErrorHandler = () => {\r\n        setIfImgError(avatarDefault)\r\n    }\r\n\r\n    if (!isLogined) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Profile\r\n            isBusy={isBusy}\r\n            error={error}\r\n            email={email}\r\n            newName={newName}\r\n            avatar={avatar || 'none'}\r\n            newAvatar={newAvatar}\r\n            nameChangeText={nameChangeText}\r\n            avatarChangeText={avatarChangeText}\r\n\r\n            changePress={changePress}\r\n            logoutPress={logoutPress}\r\n            ifImgError={ifImgError}\r\n            setIfImgErrorHandler={setIfImgErrorHandler}\r\n\r\n            profileChanged={profileChanged}\r\n        />\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './PwdRestore.module.css';\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    restorePress: () => void\r\n}\r\n\r\nexport function PwdRestore(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Restore Password</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.restorePress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Restore\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\nimport {setAppBusyAC, setAppErrorAC} from './appReducer';\nimport {authAPI} from '../dal/auth-api';\n\nconst initialState = {\n    isRestoring: false,\n}\n\ntype StateType = typeof initialState\n\n\nexport function passwordRestoreReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'PWD-RESTORE/SET-RESTORING':\n            return {\n                ...state,\n                isRestoring: action.value,\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const setIsRestoringAC = (value: boolean) => ({type: 'PWD-RESTORE/SET-RESTORING', value} as const)\n\n\nexport const pwdRestoreTC = (email: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.pwdRestore(email)\n        .then(response => {\n            dispatch(setIsRestoringAC(true))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n\ntype ActionType =\n    | ReturnType<typeof setIsRestoringAC>\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './PwdRestore.module.css';\r\nimport {PwdRestore} from './PwdRestore';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {pwdRestoreTC, setIsRestoringAC} from '../../../bll/passwordRestoreReducer';\r\n\r\n\r\nexport function PwdRestoreContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const isRestoring = useSelector<AppRootStateType, boolean>(state => state.passwordRestore.isRestoring)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n            dispatch(setIsRestoringAC(false))\r\n        }\r\n    }, [])\r\n\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@yandex.ru')\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@mail.ru')\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const restorePress = () => {\r\n        if (email === '') {\r\n            dispatch(setAppErrorAC('Fill email field!'))\r\n            return\r\n        }\r\n\r\n        dispatch(pwdRestoreTC(email))\r\n    }\r\n\r\n\r\n    if (isRestoring) {\r\n        return (\r\n            <div className={s.form}>\r\n                Check your e-mail <b>{email}</b> for Restore Password link!\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <PwdRestore\r\n                email={email}\r\n                isBusy={isBusy}\r\n                error={error}\r\n                emailChange={emailChange}\r\n                restorePress={restorePress}\r\n            />\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, MouseEvent} from 'react';\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\nimport s from './Login.module.css'\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    rememberMeChange: (e: MouseEvent<HTMLInputElement>) => void\r\n    loginPress: () => void\r\n    loginAsIgnatPress: () => void\r\n}\r\n\r\nexport function Login(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Login</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperInputText\r\n                        type={'checkbox'}\r\n                        checked={props.rememberMe}\r\n                        onClick={props.rememberMeChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.loginPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Login\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {/*======================================================*/}\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={'nya-admin@nya.nya'}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={'1qazxcvBG'}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperInputText\r\n                        type={'checkbox'}\r\n                        checked={false}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.loginAsIgnatPress}\r\n                        disabled={props.isBusy}\r\n                        red\r\n                    >\r\n                        Login as Ignat\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {/*======================================================*/}\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\nimport {authAPI} from '../dal/auth-api';\nimport {setAppBusyAC, setAppErrorAC, setUserDataAC} from './appReducer';\n\nconst initialState = {\n}\ntype StateType = typeof initialState\n\n\nexport function loginReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.login(email,password,rememberMe)\n        .then(response => {\n            dispatch(setUserDataAC(response.data))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\ntype ActionType = any\n","import React, {ChangeEvent, MouseEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {Login} from './Login';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {loginTC} from '../../../bll/loginReducer';\r\n\r\nexport function LoginContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@yandex.ru')\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@mail.ru')\r\n    const [password, setPassword] = useState<string>('11111111')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const rememberMeChange = (e: MouseEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const loginPress = () => {\r\n        if (email === '' || password === '') {\r\n            dispatch(setAppErrorAC('Fill email/password fields!'))\r\n            return\r\n        }\r\n\r\n        dispatch(loginTC(email, password, rememberMe))\r\n    }\r\n\r\n    const loginAsIgnatPress = () => {\r\n        dispatch(loginTC('nya-admin@nya.nya', '1qazxcvBG', false))\r\n    }\r\n\r\n\r\n    if (isLogined) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Login\r\n                isBusy={isBusy}\r\n                email={email}\r\n                password={password}\r\n                rememberMe={rememberMe}\r\n                emailChange={emailChange}\r\n                passwordChange={passwordChange}\r\n                rememberMeChange={rememberMeChange}\r\n                loginPress={loginPress}\r\n                loginAsIgnatPress={loginAsIgnatPress}\r\n                error={error}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './Register.module.css'\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport { Loader } from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    password: string\r\n    password2: string\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    password2Change: (e: ChangeEvent<HTMLInputElement>) => void\r\n    registerPress: () => void\r\n}\r\n\r\nexport function Register(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Register</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password (repeat)\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password2}\r\n                        onChange={props.password2Change}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.registerPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Register\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import { Dispatch } from \"redux\"\nimport {setAppBusyAC, setAppErrorAC} from './appReducer';\nimport {authAPI} from '../dal/auth-api';\n\nconst initialState = {\n    isRegistered: false,\n}\ntype StateType = typeof initialState\n\n\nexport function registerReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'REGISTER/SET-REGISTER':\n            return {\n                ...state,\n                isRegistered: action.value,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setRegisteredAC = (value: boolean) => ({type: 'REGISTER/SET-REGISTER', value} as const)\n\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.register(email, password)\n        .then(response => {\n            dispatch(setRegisteredAC(true))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\ntype ActionType =\n    | ReturnType<typeof setRegisteredAC>\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Register } from './Register';\r\nimport {registerTC, setRegisteredAC} from '../../../bll/registerReducer';\r\n\r\nexport function RegisterContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setRegisteredAC(false))\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    // const [email, setEmail] = useState<string>('')\r\n    // const [password1, setPassword1] = useState<string>('')\r\n    // const [password2, setPassword2] = useState<string>('')\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@yandex.ru')\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@mail.ru')\r\n    const [password, setPassword] = useState<string>('11111111')\r\n    const [password2, setPassword2] = useState<string>('11111111')\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const password2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const registerPress = () => {\r\n        if (email === '' || password === '' || password2 === '') {\r\n            dispatch(setAppErrorAC('Fill all fields!'))\r\n            return\r\n        }\r\n\r\n        if (password !== password2) {\r\n            dispatch(setAppErrorAC('Passwords do not match!'))\r\n            return\r\n        }\r\n\r\n        dispatch(registerTC(email, password))\r\n    }\r\n\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Register\r\n            isBusy={isBusy}\r\n            email={email}\r\n            password={password}\r\n            password2={password2}\r\n            emailChange={emailChange}\r\n            passwordChange={passwordChange}\r\n            password2Change={password2Change}\r\n            registerPress={registerPress}\r\n            error={error}\r\n        />\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './PwdNew.module.css';\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    password: string\r\n    password2: string\r\n    error: string\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    password2Change: (e: ChangeEvent<HTMLInputElement>) => void\r\n    newPress: () => void\r\n}\r\n\r\nexport function PwdNew(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>New password</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    New password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    New password (repeat)\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password2}\r\n                        onChange={props.password2Change}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.newPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Set new password\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\nimport {setAppBusyAC, setAppErrorAC} from './appReducer';\nimport {authAPI} from '../dal/auth-api';\n\nconst initialState = {\n    isPwdNew: false\n}\n\ntype StateType = typeof initialState\n\n\nexport function passwordNewReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'PWD-NEW/SET-PWD-NEW':\n            return {\n                ...state,\n                isPwdNew: action.value,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setPwdNewAC = (value: boolean) => ({type: 'PWD-NEW/SET-PWD-NEW', value} as const)\n\n\nexport const pwdNewTC = (password: string, token: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.pwdNew(password, token)\n        .then(response => {\n            dispatch(setPwdNewAC(true))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n\ntype ActionType =\n    | ReturnType<typeof setPwdNewAC>\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './PwdNew.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {PwdNew} from './PwdNew';\r\nimport {pwdNewTC, setPwdNewAC} from '../../../bll/passwordNewReducer';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport function PwdNewContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const isPwdNew = useSelector<AppRootStateType, boolean>(state => state.passwordNew.isPwdNew)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n\r\n    const {token} = useParams<{token: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setPwdNewAC(false))\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    const [password, setPassword] = useState<string>('22222222')\r\n    const [password2, setPassword2] = useState<string>('22222222')\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const password2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const newPress = () => {\r\n        if (password === '' || password2 === '') {\r\n            dispatch(setAppErrorAC('Fill all fields!'))\r\n            return\r\n        }\r\n\r\n        if (password !== password2) {\r\n            dispatch(setAppErrorAC('Passwords do not match!'))\r\n            return\r\n        }\r\n\r\n        dispatch(pwdNewTC(password, token))\r\n    }\r\n\r\n\r\n    if (isPwdNew) {\r\n        return (\r\n            <div className={s.form}>\r\n                <h2><b>Password changed!</b></h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PwdNew\r\n            isBusy={isBusy}\r\n            password={password}\r\n            password2={password2}\r\n            passwordChange={passwordChange}\r\n            password2Change={password2Change}\r\n            newPress={newPress}\r\n            error={error}\r\n        />\r\n    )\r\n}","import React, {ReactNode} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './TableLinePack.module.css';\r\n\r\n\r\ntype PropsType = {\r\n    head: boolean\r\n    nameFieldName: string\r\n    nameFieldLink: string\r\n    cardsCountField: string\r\n    updatedField: string\r\n    buttonsFieldName: string\r\n    buttonsFieldButtons: ReactNode[]\r\n\r\n}\r\n\r\nexport function TableLinePack(props: PropsType) {\r\n    let tableStyle: { [key: string]: string } = {\r\n        borderWidth: '1px',\r\n        borderStyle: 'solid',\r\n        borderColor: 'black',\r\n        width: '100%',\r\n    }\r\n    let cellStyle: { [key: string]: string } = {\r\n        padding: '3px',\r\n    }\r\n\r\n    if (props.head) {\r\n        // tableStyle = {borderWidth: '2px', borderStyle: 'solid', borderColor: 'black', width: '100%'}\r\n        tableStyle = {...tableStyle, borderWidth: '2px'}\r\n        cellStyle = {padding: '10px', textAlign: 'center'}\r\n    }\r\n\r\n    return (\r\n        // <table style={{borderWidth: '1px', borderStyle: 'solid', borderColor: 'black', width: '100%'}}>\r\n        <table style={tableStyle}>\r\n            <tr>\r\n                <td width={'50%'} style={cellStyle}>\r\n                    {props.head && props.nameFieldName}\r\n                    {!props.head && <NavLink to={'cards/' + props.nameFieldLink}>{props.nameFieldName}</NavLink>}\r\n                </td>\r\n                <td width={'10%'} style={{textAlign: 'center', ...cellStyle}}>\r\n                    {props.cardsCountField}\r\n                </td>\r\n                <td width={'20%'} style={cellStyle}>\r\n                    {props.updatedField}\r\n                </td>\r\n                <td width={'20%'} style={cellStyle}>\r\n                    {props.buttonsFieldName}\r\n                    {props.buttonsFieldButtons}\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    )\r\n}\r\n\r\n/*\r\n    <div className={s.item + ' ' + (props.head ? s.tableHead : s.tableLine)} style={{minWidth: '50%', borderWidth: '1px'}}>\r\n        {props.nameField}\r\n    </div>\r\n    <div className={s.item + ' ' + (props.head ? s.tableHead : s.tableLine)} style={{minWidth: '10%', borderWidth: '1px 1px 1px 0', textAlign: 'center'}}>\r\n        {props.cardsCountField}\r\n    </div>\r\n    <div className={s.item + ' ' + (props.head ? s.tableHead : s.tableLine)} style={{minWidth: '20%', borderWidth: '1px 0'}}>\r\n        {props.updatedField}\r\n    </div>\r\n    <div className={s.item + ' ' + (props.head ? s.tableHead : s.tableLine)} style={{minWidth: '20%', borderWidth: '1px'}}>\r\n       {props.buttonsField}\r\n    </div>\r\n*/","import {instance} from './instance';\r\n\r\nexport const packsAPI = {\r\n    getPacks(data: PacksRequestType) {\r\n        return instance.get<GetPacksResponseType>('cards/pack', {params: data})\r\n    },\r\n\r\n    addPack(newPack: NewPackType) {\r\n        return instance.post<AddPackResponseType>('cards/pack', {cardsPack: newPack})\r\n    },\r\n\r\n    delPack(id: string) {\r\n        return instance.delete<DelPackResponseType>('cards/pack?id=' + id)\r\n    },\r\n\r\n    updatePack(updatePack: UpdatePackType) {\r\n        return instance.put<UpdatePackResponseType>('cards/pack', {cardsPack: updatePack})\r\n    },\r\n\r\n}\r\n\r\nexport type UpdatePackResponseType = {\r\n    updatedCardsPack: PackType\r\n}\r\n\r\nexport type UpdatePackType = {\r\n    _id: string\r\n    name?: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    deckCover?: string\r\n    private?: boolean\r\n    type?: string\r\n}\r\n\r\n\r\nexport type DelPackResponseType = {\r\n    deletedCardsPack: PackType\r\n}\r\n\r\n\r\nexport type AddPackResponseType = {\r\n    newCardsPack: PackType\r\n}\r\n\r\nexport type NewPackType = {\r\n    name?: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    deckCover?: string\r\n    private?: boolean\r\n    type?: string\r\n}\r\n\r\n\r\nexport type PacksRequestType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}\r\n\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    cardsCount: number\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\n\r\nexport type GetPacksResponseType = {\r\n    cardPacks: PackType[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}","import {Dispatch} from 'redux';\nimport {setAppLoginAC, setAppBusyAC, setAppErrorAC} from './appReducer';\nimport {GetPacksResponseType, packsAPI, PacksRequestType} from '../dal/packs-api';\nimport {AppRootStateType} from './store';\n\nconst initialState = {\n    requestData: {\n        packName: '',\n        min: 0,\n        max: 1000,\n        sortPacks: '',\n        page: 1,\n        pageCount: 10,\n        user_id: '',\n    } as PacksRequestType,\n\n    packsData: {} as GetPacksResponseType\n}\ntype StateType = typeof initialState\n\n\nexport function packsReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'PACKS/SET-PACKS-DATA':\n            return {\n                ...state,\n                packsData: {...action.packsData},\n            }\n\n        case 'PACKS/SET-PACKS-PER-PAGE':\n            return {\n                ...state,\n                requestData: {\n                    ...state.requestData,\n                    pageCount: action.pageCount,\n                },\n            }\n\n        case 'PACKS/SET-MY-PACKS-CHECKBOX':\n            return {\n                ...state,\n                requestData: {\n                    ...state.requestData,\n                    user_id: action.id,\n                }\n            }\n\n        case 'APP/SET-LOGIN':\n            if (!action.value) {\n                return {\n                    ...state,\n                    requestData: {\n                        ...state.requestData,\n                        user_id: '',\n                    }\n                }\n            }\n            return state\n\n        case 'PACKS/SET-CURRENT-PAGE':\n            return {\n                ...state,\n                requestData: {\n                    ...state.requestData,\n                    page: action.pageNumber,\n                }\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const setPacksDataAC = (packsData: GetPacksResponseType) => ({type: 'PACKS/SET-PACKS-DATA', packsData} as const)\nexport const setPacksPerPageAC = (pageCount: number) => ({type: 'PACKS/SET-PACKS-PER-PAGE', pageCount} as const)\nexport const setMyPacksCheckBoxAC = (id: string) => ({type: 'PACKS/SET-MY-PACKS-CHECKBOX', id} as const)\nexport const setCurrentPageAC = (pageNumber: number) => ({type: 'PACKS/SET-CURRENT-PAGE', pageNumber} as const)\n\n\nexport const getPacksTC = () => (dispatch: Dispatch, getState: () => AppRootStateType) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n\n    const requestData = getState().packs.requestData\n    packsAPI.getPacks(requestData)\n        .then(response => {\n            dispatch(setPacksDataAC(response.data))\n\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n/*\n            const errorMessage = error.response ? error.response.data.error : error.message\n            if (errorMessage.indexOf('you are not authorized') >= 0) {\n                dispatch(setAppLoginAC(false))\n            } else {\n                dispatch(setAppErrorAC(errorMessage))\n            }\n */\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n// export const addPackTC = () => (dispatch: Dispatch) => {\nexport const addPackTC = () => (dispatch: any) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n\n    packsAPI.addPack({name: 'SuperPuperName'})\n        .then(response => {\n            dispatch(getPacksTC())\n\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n// export const delPackTC = () => (dispatch: Dispatch) => {\nexport const delPackTC = (id: string) => (dispatch: any) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n\n    packsAPI.delPack(id)\n        .then(response => {\n            dispatch(getPacksTC())\n\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n// export const updatePackTC = () => (dispatch: Dispatch) => {\nexport const updatePackTC = (_id: string) => (dispatch: any) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n\n    packsAPI.updatePack({_id, name: 'Updated SuperPuperName!'})\n        .then(response => {\n            dispatch(getPacksTC())\n\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n\ntype ActionType =\n    | ReturnType<typeof setAppLoginAC>\n\n    | ReturnType<typeof setPacksDataAC>\n    | ReturnType<typeof setPacksPerPageAC>\n    | ReturnType<typeof setMyPacksCheckBoxAC>\n    | ReturnType<typeof setCurrentPageAC>\n","import React from 'react';\r\nimport s from './PacksPerPage.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {setPacksPerPageAC} from '../../bll/packsReducer';\r\n\r\nconst perPageArr = [5, 10, 15]\r\n\r\nexport function PacksPerPage() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const pageCount = useSelector<AppRootStateType, number | undefined>(state => state.packs.requestData.pageCount) || perPageArr[1]\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            <div className={s.itemText}>Packs per page:</div>\r\n            {perPageArr.map(p =>\r\n                <div\r\n                    className={s.item + ' ' + (p === pageCount ? s.itemActive : '')}\r\n                    onClick={() => {\r\n                        if (!isBusy && p !== pageCount) dispatch(setPacksPerPageAC(p))\r\n                    }}\r\n                >\r\n                    {p}\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from 'react';\r\nimport s from './MyPacksCheckBox.module.css'\r\nimport SuperCheckbox from '../c1-common/c3-SuperCheckbox/SuperCheckbox';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {setMyPacksCheckBoxAC} from '../../bll/packsReducer';\r\n\r\n\r\nexport function MyPacksCheckBox() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const id = useSelector<AppRootStateType, string>(state => state.app.userData._id)\r\n    const requestUserId = useSelector<AppRootStateType, string | undefined>(state => state.packs.requestData.user_id) || ''\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            My packs\r\n            <SuperCheckbox\r\n                checked={!!requestUserId}\r\n                onClick={\r\n                    (e) =>\r\n                        dispatch(setMyPacksCheckBoxAC(e.currentTarget.checked ? id: ''))\r\n                }\r\n                disabled={isBusy}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Paginator.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport SuperButton from '../c1-common/c2-SuperButton/SuperButton';\r\nimport {setCurrentPageAC} from '../../bll/packsReducer';\r\n\r\nconst pageButtons = ['|<', '<<', '<', '>', '>>', '>|']\r\nconst pageButtonsTitle = ['first', '-10', 'previous', 'next', '+10', 'last']\r\n\r\nexport function Paginator() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.packs.packsData.cardPacksTotalCount)\r\n    const packsPerPage = useSelector<AppRootStateType, number>(state => state.packs.packsData.pageCount)\r\n    const currentPage = useSelector<AppRootStateType, number>(state => state.packs.packsData.page)\r\n    const dispatch = useDispatch()\r\n\r\n    const totalPages = Math.ceil(cardPacksTotalCount / packsPerPage)\r\n\r\n\r\n    const pageFunctions = [\r\n        setCurrentPageAC(1),\r\n        setCurrentPageAC(currentPage-10),\r\n        setCurrentPageAC(currentPage-1),\r\n        setCurrentPageAC(currentPage+1),\r\n        setCurrentPageAC(currentPage+10),\r\n        setCurrentPageAC(totalPages),\r\n    ]\r\n    const pageDisables = [\r\n        function(){return currentPage===1},\r\n        function(){return currentPage<10},\r\n        function(){return currentPage===1},\r\n        function(){return currentPage===totalPages},\r\n        function(){return currentPage>totalPages-10},\r\n        function(){return currentPage===totalPages},\r\n    ]\r\n\r\n    if (currentPage && totalPages) {\r\n        return (\r\n            <div className={s.form}>\r\n                Page: {currentPage} of {totalPages}\r\n                <pre> </pre>\r\n                {\r\n                    pageButtons.map((b,i) =>\r\n                        <SuperButton\r\n                            title={pageButtonsTitle[i]}\r\n                            onClick={()=>dispatch(pageFunctions[i])}\r\n                            disabled={isBusy || pageDisables[i]()}\r\n                        >\r\n                            {b}\r\n                        </SuperButton>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <></>\r\n}","import React from 'react';\r\nimport s from './Packs.module.css'\r\nimport {Loader} from '../../Loader/Loader';\r\nimport {GetPacksResponseType} from '../../../dal/packs-api';\r\nimport {TableLinePack} from '../../TableLinePack/TableLinePack';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {PacksPerPage} from '../../PacksPerPage/PacksPerPage';\r\nimport {MyPacksCheckBox} from '../../MyPacksCheckBox/MyPacksCheckBox';\r\nimport {Paginator} from '../../Paginator/Paginator';\r\n\r\ntype PropsType = {\r\n    userId: string\r\n    packs: GetPacksResponseType\r\n    isBusy: boolean\r\n    error: string\r\n    addPress: () => void\r\n    delPress: (id: string) => void\r\n    updatePress: (id: string) => void\r\n}\r\n\r\nexport function Packs(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Packs</h1>\r\n\r\n            <div className={s.form}>\r\n\r\n                <TableLinePack\r\n                    head={true}\r\n                    nameFieldName={'Name'}\r\n                    nameFieldLink={''}\r\n                    cardsCountField={'Cards count'}\r\n                    updatedField={'Updated'}\r\n                    buttonsFieldName={'Actions: '}\r\n                    buttonsFieldButtons={\r\n                        [\r\n                            <SuperButton\r\n                                onClick={props.addPress}\r\n                                disabled={props.isBusy}\r\n                            >add</SuperButton>\r\n                        ]\r\n                    }\r\n                />\r\n\r\n                {\r\n                    props.packs.cardPacks &&\r\n                    props.packs.cardPacks.map(c =>\r\n                        <TableLinePack\r\n                            key={c._id}\r\n                            head={false}\r\n                            nameFieldName={c.name}\r\n                            nameFieldLink={c._id}\r\n                            cardsCountField={'' + c.cardsCount}\r\n                            updatedField={c.updated}\r\n                            buttonsFieldName={''}\r\n                            buttonsFieldButtons={\r\n                                [\r\n                                    <SuperButton\r\n                                        onClick={() => props.delPress(c._id)}\r\n                                        disabled={props.isBusy || c.user_id !== props.userId}\r\n                                    >del</SuperButton>,\r\n                                    <SuperButton\r\n                                        onClick={() => props.updatePress(c._id)}\r\n                                        disabled={props.isBusy || c.user_id !== props.userId}\r\n                                    >update</SuperButton>\r\n                                ]\r\n                            }\r\n                        />\r\n                    )\r\n                }\r\n\r\n                <div className={s.footBlocks}>\r\n                    <div className={s.footBlockLeft}>\r\n                        <MyPacksCheckBox/>\r\n                        <PacksPerPage/>\r\n                    </div>\r\n                    <div className={s.footBlockRight}>\r\n                        <Paginator/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {Packs} from './Packs';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {addPackTC, delPackTC, getPacksTC, updatePackTC} from '../../../bll/packsReducer';\r\nimport {GetPacksResponseType, PacksRequestType} from '../../../dal/packs-api';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport function PacksContainer() {\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.app.userData._id)\r\n    const requestData = useSelector<AppRootStateType, PacksRequestType>(state => state.packs.requestData)\r\n    const packsData = useSelector<AppRootStateType, GetPacksResponseType>(state => state.packs.packsData)\r\n\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (isLogined) {\r\n            dispatch(getPacksTC())\r\n        }\r\n\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [requestData])\r\n\r\n    const addPress = () => {\r\n        dispatch(addPackTC())\r\n    }\r\n\r\n    const delPress = (id: string) => {\r\n        dispatch(delPackTC(id))\r\n    }\r\n\r\n    const updatePress = (id: string) => {\r\n        dispatch(updatePackTC(id))\r\n    }\r\n\r\n    if (!isLogined) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Packs\r\n                userId={userId}\r\n                packs={packsData}\r\n                isBusy={isBusy}\r\n                error={error}\r\n                addPress={addPress}\r\n                delPress={delPress}\r\n                updatePress={updatePress}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Error404} from '../Error404/Error404';\r\nimport {ProfileContainer} from '../Profile/ProfileContainer';\r\nimport {PwdRestoreContainer} from '../PwdRestore/PwdRestoreContainer';\r\nimport {LoginContainer} from '../Login/LoginContainer';\r\nimport {RegisterContainer} from '../Register/RegisterContainer';\r\nimport {PwdNewContainer} from '../PwdNew/PwdNewContainer';\r\nimport {PacksContainer} from '../Packs/PacksContainer';\r\n\r\n/*\r\nлогинизация\r\nрегистрация\r\nпрофайл\r\n404 (можно застилизовать заранее)\r\nвосстановление пароля\r\nввод нового пароля\r\nтестовая - отобразить/продемонстрировать все SuperКомпоненты\r\n */\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RESTORE: '/pwd-restore',\r\n    PASSWORD_NEW: '/pwd-new/:token',\r\n    PACKS: '/packs',\r\n}\r\n\r\n\r\nexport function Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <ProfileContainer/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <LoginContainer/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <RegisterContainer/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\r\n                <Route path={PATH.PASSWORD_RESTORE} render={() => <PwdRestoreContainer/>}/>\r\n                <Route path={PATH.PASSWORD_NEW} render={() => <PwdNewContainer/>}/>\r\n                <Route path={PATH.PACKS} render={() => <PacksContainer/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './SuperNavLink.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    goTo: string\r\n    text: string\r\n    padding?: string\r\n    margin?: string\r\n    border?: string\r\n}\r\n\r\nexport function SuperNavLink(props: PropsType) {\r\n    return (\r\n        <NavLink\r\n            className={s.item}\r\n            to={props.goTo}\r\n            style={{\r\n                padding: `${props.padding || '5px'}`,\r\n                margin: `${props.margin || '5px'}`,\r\n                border: `${props.border || '1px solid green'}`,\r\n            }}\r\n        >\r\n            {props.text}\r\n        </NavLink>\r\n    )\r\n}","import React from 'react';\r\nimport {PATH} from '../c2-pages/Routes/Routes';\r\nimport {SuperNavLink} from '../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\ntype PropsType = {\r\n    isLogined: boolean\r\n    isRestoring: boolean\r\n}\r\n\r\nexport function Header({isLogined, isRestoring}: PropsType) {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center', color: 'red'}}>FRIDAY</h1>\r\n\r\n            {!isLogined && <SuperNavLink goTo={PATH.LOGIN} text={'Login page'}/>}\r\n\r\n            {!isLogined && <SuperNavLink goTo={PATH.REGISTER} text={'Register page'}/>}\r\n\r\n            {isLogined && <SuperNavLink goTo={PATH.PROFILE} text={'Profile page'}/>}\r\n\r\n            {!isRestoring &&\r\n            <SuperNavLink goTo={PATH.PASSWORD_RESTORE} text={'Restore password page'} border={'1px solid blue'}/>}\r\n\r\n            {isLogined && <SuperNavLink goTo={PATH.PACKS} text={'Packs page'}/>}\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from './components/Header/Header';\r\nimport {Routes} from './components/c2-pages/Routes/Routes';\r\nimport {AppRootStateType} from './bll/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Loader} from './components/Loader/Loader';\r\nimport {initializeTC} from './bll/appReducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nexport function App() {\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const isRestoring = useSelector<AppRootStateType, boolean>(state => state.passwordRestore.isRestoring)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeTC())\r\n    }, [])\r\n\r\n\r\n    if (!isInitialized) {\r\n        return (\r\n            <div className={'init'}>\r\n                <Loader/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header isLogined={isLogined} isRestoring={isRestoring}/>\r\n            <Routes/>\r\n            {/*<Redirect to={isLogined ? '/profile' : '/login'}/>*/}\r\n        </div>\r\n    )\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk';\nimport {loginReducer} from './loginReducer'\nimport {profileReducer} from './profileReducer'\nimport {registerReducer} from './registerReducer'\nimport {passwordNewReducer} from './passwordNewReducer';\nimport {passwordRestoreReducer} from './passwordRestoreReducer';\nimport {appReducer} from './appReducer';\nimport {packsReducer} from './packsReducer';\n\nconst reducers = combineReducers({\n    app: appReducer,\n    login: loginReducer,\n    register: registerReducer,\n    profile: profileReducer,\n    passwordRestore: passwordRestoreReducer,\n    passwordNew: passwordNewReducer,\n    packs: packsReducer,\n})\n\nconst store = createStore(reducers,applyMiddleware(thunkMiddleware))\n\nexport default store\n\nexport type AppRootStateType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {App} from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './bll/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}