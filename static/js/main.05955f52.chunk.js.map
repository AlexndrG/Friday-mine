{"version":3,"sources":["components/c2-pages/Login/Login.module.css","components/c2-pages/Profile/Profile.module.css","components/c2-pages/Register/Register.module.css","components/c2-pages/Error404/Error404.module.css","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.module.css","components/c1-common/c1-SuperInputText/SuperInputText.module.css","components/c1-common/c2-SuperButton/SuperButton.module.css","components/c1-common/c3-SuperCheckbox/SuperCheckbox.module.css","components/ShowComponent/ShowComponent.module.css","components/Loader/Loader.module.css","components/c2-pages/Test/Test.module.css","components/c1-common/c7-SuperRange/SuperRange.module.css","components/c1-common/c91-SuperNavLink/SuperNavLink.module.css","components/c2-pages/Error404/Error404.tsx","components/c2-pages/Profile/avatar.jpg","components/c1-common/c2-SuperButton/SuperButton.tsx","components/Loader/loader.gif","components/Loader/Loader.tsx","components/c1-common/c1-SuperInputText/SuperInputText.tsx","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.tsx","components/c2-pages/Profile/Profile.tsx","dal/cards-api.ts","bll/appReducer.ts","bll/profileReducer.ts","components/c2-pages/Profile/ProfileContainer.tsx","components/c2-pages/PwdRestore/PwdRestore.tsx","components/c2-pages/PwdNew/PwdNew.tsx","components/c2-pages/Login/Login.tsx","bll/loginReducer.ts","components/c2-pages/Login/LoginContainer.tsx","components/c1-common/c3-SuperCheckbox/SuperCheckbox.tsx","components/c1-common/c5-SuperSelect/SuperSelect.tsx","components/c1-common/c6-SuperRadio/SuperRadio.tsx","components/c1-common/c7-SuperRange/SuperRange.tsx","components/ShowComponent/ShowComponent.tsx","components/c1-common/c91-SuperNavLink/SuperNavLink.tsx","components/c2-pages/Test/Test.tsx","components/c2-pages/Register/Register.tsx","bll/registerReducer.ts","components/c2-pages/Register/RegisterContainer.tsx","components/c2-pages/Routes/Routes.tsx","components/Header/Header.tsx","App.tsx","bll/passwordNewReducer.ts","bll/passwordRestoreReducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","error","text","image","src","alt","SuperButton","red","restProps","finalClassName","default","Loader","loader","loadingPicture","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","type","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","editableSpan","pen","Profile","props","main","form","item","photo","ifImgError","avatar","avatarDefault","onError","setIfImgError","email","newName","nameChange","disabled","isBusy","size","newAvatar","avatarChange","onClick","changePress","logoutPress","instance","axios","create","baseURL","withCredentials","authAPI","post","password","rememberMe","delete","name","put","initialState","isInitialized","isLogined","userData","setAppBusyAC","setAppErrorAC","errorText","setUserDataAC","ProfileContainer","useSelector","state","app","dispatch","useDispatch","setNewName","setNewAvatar","useEffect","then","response","data","updatedUser","catch","message","finally","changeProfileTC","to","PwdRestore","PwdNew","Login","emailChange","passwordChange","checked","rememberMeChange","loginPress","loginTC","LoginContainer","setEmail","setPassword","setRememberMe","modeIgnat","SuperCheckbox","onChangeChecked","checkbox","SuperSelect","options","onChangeOption","mappedOptions","map","op","i","SuperRadio","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","style","boxSizing","width","height","ShowComponent","h3","node","SuperNavLink","goTo","arr","Test","Register","password2","password2Change","registerPress","isRegistered","setRegisteredAC","RegisterContainer","register","setPassword2","registerTC","PATH","Routes","path","exact","render","Header","textAlign","color","App","reducers","combineReducers","login","action","profile","passwordNew","passwordRestore","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,uB,mBCA3GD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,MAAQ,uBAAuB,KAAO,sBAAsB,MAAQ,yB,mBCAhJD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,0B,mBCApHD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,KAAO,uBAAuB,MAAQ,0B,mBCAxFD,EAAOC,QAAU,CAAC,IAAM,+BAA+B,cAAgB,yCAAyC,aAAe,0C,mBCA/HD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,KAAO,4BAA4B,GAAK,4B,mBCA1DD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,4B,mBCA1BD,EAAOC,QAAU,CAAC,KAAO,6B,6KCElB,SAASC,IACZ,OACI,sBAAKC,UAAWC,IAAEC,MAAlB,UACI,sBAAKF,UAAWC,IAAEE,KAAlB,gBACO,uBADP,cAKA,qBAAKH,UAAWC,IAAEG,MAAOC,IAAK,+EAAgFC,IAAK,Y,mCCXhH,MAA0B,mC,qDC4B1BC,EAlBqC,SAAC,GAM1C,IAJHC,EAIE,EAJFA,IACAR,EAGE,EAHFA,UAEGS,EACD,iBAEAC,EAAc,UAAMF,EAAMP,IAAEO,IAAMP,IAAEU,QAAtB,YAAiCX,GAErD,OACI,oCACIA,UAAWU,GACPD,K,iBCvBD,MAA0B,mCCIlC,SAASG,IACZ,OAAO,qBAAKZ,UAAWC,IAAEY,OAAQR,IAAKS,I,+HCwD3BC,EA9C2C,SAAC,GAYhD,IATHC,EASE,EATFA,SACAC,EAQE,EARFA,aACAC,EAOE,EAPFA,WACAC,EAME,EANFA,QACAjB,EAKE,EALFA,MACAF,EAIE,EAJFA,UACAoB,EAGE,EAHFA,cAEGX,EACD,iBAgBAY,EAAkB,UAAMpB,IAAEC,MAAR,YAAiBkB,GAAgC,IACnEE,EAAmB,UAAMpB,EAAQD,IAAEsB,WAAatB,IAAEuB,WAA/B,YAA6CxB,GAEtE,OACI,qCACI,mCACIyB,KAAM,OACNT,SArBa,SAACU,GACtBV,GACGA,EAASU,GAEZT,GAAgBA,EAAaS,EAAEC,cAAcC,QAkBrCV,WAhBe,SAACQ,GACxBR,GAAcA,EAAWQ,GAEzBP,GACa,UAAVO,EAAEG,KACFV,KAYKnB,UAAWsB,GAEPb,IAEPP,GAAS,sBAAMF,UAAWqB,EAAjB,SAAsCnB,Q,0FCsC7C4B,EAzE4C,SAAC,GAQlD,EANFC,UAMG,IALHC,EAKE,EALFA,OACAb,EAIE,EAJFA,QACAc,EAGE,EAHFA,UAEGxB,EACD,iBACN,EAAgCyB,oBAAkB,GAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA+DH,GAAa,GAArEI,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,cAAetC,EAAhC,EAAgCA,UAAcuC,EAA9C,iBAsBMnB,EAAa,UACZnB,IAAEuC,aADU,sBAEZ/B,EAAUW,cAAgBnB,IAAEQ,EAAUW,eAAiB,GAF3C,sBAGZpB,GAAwB,IAE/B,OACI,mCACKmC,EAEO,cAAC,EAAD,aACIJ,WAAS,EACTC,OAzBG,SAACN,GACpBU,GAAY,GAEZJ,GAAUA,EAAON,IAuBDP,QAhCI,WACpBiB,GAAY,GAEZjB,GAAWA,MA+BSV,IAGR,gCACI,qBACIT,UAAWC,IAAEwC,IAEbpC,IAAI,oEACJC,IAAI,QAGR,8CACIgC,cAlCM,SAACZ,GAC3BU,GAAY,GAEZE,GAAiBA,EAAcZ,IAgCX1B,UAAWoB,GAEPmB,GAJR,aAOKF,GAAY5B,EAAUmB,eC5D5C,SAASc,EAAQC,GACpB,OACI,sBAAK3C,UAAWC,IAAE2C,KAAlB,UACI,yCAEA,sBAAK5C,UAAWC,IAAE4C,KAAlB,UACI,qBAAK7C,UAAWC,IAAE6C,KAAlB,SACI,qBACI9C,UAAWC,IAAE8C,MAEb1C,IAAKsC,EAAMK,YAAcL,EAAMM,QAAUC,EACzCC,QAAS,kBAAMR,EAAMS,cAAcF,QAI3C,sBAAKlD,UAAWC,IAAE6C,KAAlB,UACI,uCADJ,WACsBH,EAAMU,UAG5B,sBAAKrD,UAAWC,IAAE6C,KAAlB,UACI,sCACA,8BACI,cAAC,EAAD,CACIlB,MAAOe,EAAMW,QACbrC,aAAc0B,EAAMY,WACpBC,SAAUb,EAAMc,OAChBC,KAAM,UAKlB,sBAAK1D,UAAWC,IAAE6C,KAAlB,UACI,6CACA,8BACI,cAAC,EAAD,CACIlB,MAAOe,EAAMgB,UACb1C,aAAc0B,EAAMiB,aACpBJ,SAAUb,EAAMc,OAChBC,KAAM,UAMlB,sBAAK1D,UAAWC,IAAE6C,KAAlB,UACI,uBACA,cAAC,EAAD,CACIe,QAASlB,EAAMmB,YACfN,SAAUb,EAAMc,OAFpB,+BAQJ,sBAAKzD,UAAWC,IAAE6C,KAAlB,UACI,uBACA,cAAC,EAAD,CACIe,QAASlB,EAAMoB,YACfP,SAAUb,EAAMc,OAFpB,0BAUPd,EAAMc,QACP,8BACI,cAAC7C,EAAD,MAGH+B,EAAMzC,OACP,qBAAKF,UAAWC,IAAEC,MAAlB,SACKyC,EAAMzC,W,YC3FjB8D,E,OAAWC,EAAMC,OAAO,CAC1BC,QAHY,uCAIZC,iBAAiB,IAIRC,EAAU,WAEf,OAAOL,EAASM,KAAwB,UAAW,KAF9CD,EAAU,SAKbhB,EAAekB,EAAkBC,GACnC,OAAOR,EAASM,KAAwB,aAAc,CAACjB,QAAOkB,WAAUC,gBANnEH,EAAU,WAUf,OAAOL,EAASS,OAA2B,YAVtCJ,EAAU,SAaVhB,EAAekB,GACpB,OAAOP,EAASM,KAA2B,gBAAiB,CAACjB,QAAOkB,cAd/DF,EAAU,SAiBPK,EAAczB,GACtB,OAAOe,EAASW,IAA6B,UAAW,CAACD,OAAMzB,YC5BjE2B,EAAe,CACjBC,eAAe,EACfpB,QAAQ,EACRvD,MAAO,GACP4E,WAAW,EACXC,SAAU,IA2CP,IACMC,EAAe,SAACpD,GAAD,MAAqB,CAACH,KAAM,eAAgBG,UAC3DqD,EAAgB,SAACC,GAAD,MAAwB,CAACzD,KAAM,gBAAiByD,cAEhEC,EAAgB,SAACJ,GAAD,MAAkC,CAACtD,KAAM,oBAAqBsD,aCnDrFH,EAAe,GCMd,SAASQ,IACZ,IAAMN,EAAYO,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,IAAIT,aACtErB,EAAS4B,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,IAAI9B,UACnEvD,EAAQmF,aAAsC,SAAAC,GAAK,OAAIA,EAAMC,IAAIrF,SACvE,EAA8BmF,aAAiD,SAAAC,GAAK,OAAIA,EAAMC,IAAIR,YAA3F1B,EAAP,EAAOA,MAAOqB,EAAd,EAAcA,KAAMzB,EAApB,EAAoBA,OACduC,EAAWC,cAEjB,EAA8BvD,mBAASwC,GAAvC,mBAAOpB,EAAP,KAAgBoC,EAAhB,KACA,EAAkCxD,mBAASe,GAAU,QAArD,mBAAOU,EAAP,KAAkBgC,EAAlB,KAEA,EAAoCzD,mBAAS,IAA7C,mBAAOc,EAAP,KAAmBI,EAAnB,KAEAwC,qBAAU,WACN,OAAO,WACHJ,EAASP,EAAc,QAE5B,IAYH,OAAKH,EAKD,cAACpC,EAAD,CACIe,OAAQA,EACRvD,MAAOA,EACPmD,MAAOA,EACPC,QAASA,EACTL,OAAQA,GAAU,OAClBU,UAAWA,EACXJ,WAAYmC,EACZ9B,aAAc+B,EAEd7B,YAxBY,WAChB0B,EDbuB,SAACd,EAAczB,GAAf,OAAkC,SAACuC,GAC9DA,EAASP,EAAc,KACvBO,EAASR,GAAa,IACtBX,EAAoBK,EAAMzB,GACrB4C,MAAK,SAAAC,GACFN,EAASL,EAAcW,EAASC,KAAKC,iBAExCC,OAAM,SAAA/F,GACHsF,EAASP,EAAc/E,EAAM4F,SAAW5F,EAAM4F,SAASC,KAAK7F,MAAQA,EAAMgG,aAE7EC,SAAQ,WACLX,EAASR,GAAa,QCEjBoB,CAAgB9C,EAASK,KAwB9BI,YArBY,WAChByB,GDFsB,SAACA,GAC3BA,EAASP,EAAc,KACvBO,EAASR,GAAa,IACtBX,IACKwB,MAAK,SAAAC,GACFN,EDiBwC,CAAC/D,KAAM,gBAAiBG,OCjBvC,OAE5BqE,OAAM,SAAA/F,GACHsF,EAASP,EAAc/E,EAAM4F,SAAW5F,EAAM4F,SAASC,KAAK7F,MAAQA,EAAMgG,aAE7EC,SAAQ,WACLX,EAASR,GAAa,WCYtBhC,WAAYA,EACZI,cAAeA,IAjBZ,cAAC,IAAD,CAAUiD,GAAI,WCrCtB,SAASC,IAEZ,OACI,8BACI,oDCJL,SAASC,IAEZ,OACI,8BACI,gD,sBCYL,SAASC,GAAM7D,GAClB,OACI,sBAAK3C,UAAWC,KAAE2C,KAAlB,UACI,uCAEA,sBAAK5C,UAAWC,KAAE4C,KAAlB,UACI,sBAAK7C,UAAWC,KAAE6C,KAAlB,mBAEI,uBACA,cAAC,EAAD,CACIlB,MAAOe,EAAMU,MACbrC,SAAU2B,EAAM8D,YAChBjD,SAAUb,EAAMc,YAIxB,sBAAKzD,UAAWC,KAAE6C,KAAlB,qBAEI,uBACA,cAAC,EAAD,CACIlB,MAAOe,EAAM4B,SACbvD,SAAU2B,EAAM+D,eAChBlD,SAAUb,EAAMc,YAIxB,sBAAKzD,UAAWC,KAAE6C,KAAlB,UACI,uBACA,cAAC,EAAD,CACIrB,KAAM,WACNkF,QAAShE,EAAM6B,WACfX,QAASlB,EAAMiE,iBACfpD,SAAUb,EAAMc,SANxB,iBAWA,sBAAKzD,UAAWC,KAAE6C,KAAlB,UACI,uBACA,cAAC,EAAD,CACIe,QAAS,kBAAMlB,EAAMkE,YAAW,IAChCrD,SAAUb,EAAMc,OAFpB,yBAWR,sBAAKzD,UAAWC,KAAE4C,KAAlB,UACI,sBAAK7C,UAAWC,KAAE6C,KAAlB,mBAEI,uBACA,cAAC,EAAD,CACIlB,MAAO,yBAIf,sBAAK5B,UAAWC,KAAE6C,KAAlB,qBAEI,uBACA,cAAC,EAAD,CACIlB,MAAO,iBAIf,sBAAK5B,UAAWC,KAAE6C,KAAlB,UACI,uBACA,cAAC,EAAD,CACIrB,KAAM,WACNkF,SAAS,IAJjB,iBASA,sBAAK3G,UAAWC,KAAE6C,KAAlB,UACI,uBACA,cAAC,EAAD,CACIe,QAAS,kBAAMlB,EAAMkE,YAAW,IAChCrD,SAAUb,EAAMc,OAChBjD,KAAG,EAHP,kCAYPmC,EAAMc,QACP,8BACI,cAAC7C,EAAD,MAGH+B,EAAMzC,OACP,qBAAKF,UAAWC,KAAEC,MAAlB,SACKyC,EAAMzC,WC/GvB,IAAM0E,GAAe,GAad,IAAMkC,GAAU,SAACzD,EAAekB,EAAkBC,GAAlC,OAA0D,SAACgB,GAC9EA,EAASP,EAAc,KACvBO,EAASR,GAAa,IACtBX,EAAchB,EAAMkB,EAASC,GACxBqB,MAAK,SAAAC,GACFN,EAASL,EAAcW,EAASC,UAEnCE,OAAM,SAAA/F,GACHsF,EAASP,EAAc/E,EAAM4F,SAAW5F,EAAM4F,SAASC,KAAK7F,MAAQA,EAAMgG,aAE7EC,SAAQ,WACLX,EAASR,GAAa,SCpB3B,SAAS+B,KACZ,IAAMtD,EAAS4B,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,IAAI9B,UACnEqB,EAAYO,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,IAAIT,aACtE5E,EAAQmF,aAAsC,SAAAC,GAAK,OAAIA,EAAMC,IAAIrF,SACjEsF,EAAWC,cAEjBG,qBAAU,WACN,OAAO,WACHJ,EAASP,EAAc,QAE5B,IAEH,MAA0B/C,mBAAiB,0BAA3C,mBAAOmB,EAAP,KAAc2D,EAAd,KACA,EAAgC9E,mBAAiB,YAAjD,mBAAOqC,EAAP,KAAiB0C,EAAjB,KACA,EAAoC/E,oBAAkB,GAAtD,mBAAOsC,EAAP,KAAmB0C,EAAnB,KAiCA,OAAIpC,EACO,cAAC,IAAD,CAAUuB,GAAI,aAIrB,mCACI,cAACG,GAAD,CACI/C,OAAQA,EACRJ,MAAOA,EACPkB,SAAUA,EACVC,WAAYA,EACZiC,YA1CQ,SAAC/E,GACbxB,GAAOsF,EAASP,EAAc,KAClC+B,EAAStF,EAAEC,cAAcC,QAyCjB8E,eAtCW,SAAChF,GAChBxB,GAAOsF,EAASP,EAAc,KAClCgC,EAAYvF,EAAEC,cAAcC,QAqCpBgF,iBAlCa,SAAClF,GAClBxB,GAAOsF,EAASP,EAAc,KAClCiC,EAAcxF,EAAEC,cAAcgF,UAiCtBE,WA9BO,SAACM,GAOZ3B,EANU,KAAVnC,GAA6B,KAAbkB,EAKhB4C,EACSL,GAAQ,oBAAoB,aAAY,GAGxCA,GAAQzD,EAAOkB,EAAUC,GARzBS,EAAc,iCA6BnB/E,MAAOA,M,4HCxBRkH,GAnCyC,SAAC,GAU/C,EARF3F,KAQG,IAPHT,EAOE,EAPFA,SACAqG,EAME,EANFA,gBACArH,EAKE,EALFA,UAEAqC,GAGE,EAJFjB,cAIE,EAHFiB,UAEG5B,EACD,kBASAa,EAAmB,UAAMrB,KAAEqH,SAAR,YAAoBtH,GAAwB,IAErE,OACI,kCACI,mCACIyB,KAAM,WACNT,SAba,SAACU,GAEtBV,GAAYA,EAASU,GAErB2F,GAAmBA,EAAgB3F,EAAEC,cAAcgF,UAU3C3G,UAAWsB,GAEPb,IAEP4B,GAAY,sBAAMrC,UAAWC,KAAEmB,cAAnB,SAAmCiB,Q,2CCG7CkF,GAnCqC,SAAC,GAM1C,IAJHC,EAIE,EAJFA,QACAC,EAGE,EAHFA,eACAzG,EAEE,EAFFA,SACGP,EACD,kBAGAiH,EACFF,EACMA,EAAQG,KAAI,SAACC,EAAIC,GAAL,OACV,wBAEIjG,MAAOgG,EAFX,SAKKA,GAJIC,MAMX,GASV,OACI,gDAAQ7G,SARa,SAACU,GAEtBV,GAAYA,EAASU,GAErB+F,GAAkBA,EAAe/F,EAAEC,cAAcC,SAITnB,GAAxC,aACKiH,M,iECWEI,GAzCmC,SAAC,GASzC,EAPFrG,KAOG,IANHiD,EAME,EANFA,KACA9C,EAKE,EALFA,MACAZ,EAIE,EAJFA,SACAwG,EAGE,EAHFA,QACAC,EAEE,EAFFA,eACGhH,EACD,kBAEAsH,EAAmB,SAACrG,GAEtBV,GAAYA,EAASU,GAErB+F,GAAkBA,EAAe/F,EAAEC,cAAcC,QAI/C8F,EAAuBF,EAAUA,EAAQG,KAAI,SAACK,EAAGH,GAAJ,OAC/C,cAD2D,CAC3D,mBACI,mCACIpG,KAAM,QAENiD,KAAMA,EACNiC,QAAS/E,IAAUoG,EACnBpG,MAAOoG,EACPhH,SAAU+G,GACNtH,IAEPuH,IAVOtD,EAAO,IAAMmD,MAYxB,GAEL,OACI,mCACKH,K,uECFEO,GA/BmC,SAAC,GAQ9C,EANGxG,KAMF,IALET,EAKH,EALGA,SACAkH,EAIH,EAJGA,cACAlI,EAGH,EAHGA,UACGS,EAEN,kBAOK0H,EAAmB,UAAMlI,KAAEmI,MAAR,YAAiBpI,GAAwB,IAElE,OACI,mCACI,mCACIqI,MAAO,CAACC,UAAW,aAAcC,MAAO,QAASC,OAAQ,QACzD/G,KAAM,QACNT,SAba,SAACU,GACtBV,GAAYA,EAASU,GAErBwG,GAAiBA,GAAexG,EAAEC,cAAcC,QAWxC5B,UAAWmI,GAEP1H,O,oBC7Bb,SAASgI,GAAc9F,GAC1B,OACI,sBAAK3C,UAAWC,KAAE6C,KAAlB,UACI,8BACI,oBAAI9C,UAAWC,KAAEyI,GAAjB,SAAsB/F,EAAM+B,SAE/B/B,EAAMgG,Q,wBCLZ,SAASC,GAAajG,GACzB,OACQ,cAAC,IAAD,CAAS3C,UAAWC,KAAE6C,KAAMuD,GAAI1D,EAAMkG,KAAtC,SAA6ClG,EAAMxC,OCC/D,IAAM2I,GAAM,CAAC,QAAS,SAAU,eAEzB,SAASC,KAIZ,OACI,gCACI,sCAEA,sBAAK/I,UAAWC,KAAE2C,KAAlB,UACI,cAAC6F,GAAD,CAAe/D,KAAM,iBAAkBiE,KACnC,cAAC,EAAD,CACI/G,MAAO,qBAQf,cAAC6G,GAAD,CAAe/D,KAAM,cAAeiE,KAChC,cAAC,EAAD,4BAKJ,cAACF,GAAD,CAAe/D,KAAM,gBAAiBiE,KAClC,cAAC,GAAD,8BAQJ,cAACF,GAAD,CAAe/D,KAAM,oBAAqBiE,KACtC,cAAC,EAAD,CACI/G,MAAO,wBAWf,cAAC6G,GAAD,CAAe/D,KAAM,cAAeiE,KAChC,cAAC,GAAD,CACI/G,MAAO,cACP4F,QAASsB,OAMjB,cAACL,GAAD,CAAe/D,KAAM,aAAciE,KAC/B,cAAC,GAAD,CACInB,QAASsB,GACTlH,MAAOkH,GAAI,OASnB,cAACL,GAAD,CAAe/D,KAAM,aAAciE,KAC/B,cAAC,GAAD,CACI/G,MAAO,OAQf,cAAC6G,GAAD,CAAe/D,KAAM,eAAgBiE,KACjC,cAACC,GAAD,CACIC,KAAM,QACN1I,KAAM,4B,wBC7EvB,SAAS6I,GAASrG,GACrB,OACI,sBAAK3C,UAAWC,KAAE2C,KAAlB,UACI,0CAEA,sBAAK5C,UAAWC,KAAE4C,KAAlB,UACI,sBAAK7C,UAAWC,KAAE6C,KAAlB,mBAEI,uBACA,cAAC,EAAD,CACIlB,MAAOe,EAAMU,MACbrC,SAAU2B,EAAM8D,YAChBjD,SAAUb,EAAMc,YAIxB,sBAAKzD,UAAWC,KAAE6C,KAAlB,qBAEI,uBACA,cAAC,EAAD,CACIlB,MAAOe,EAAM4B,SACbvD,SAAU2B,EAAM+D,eAChBlD,SAAUb,EAAMc,YAIxB,sBAAKzD,UAAWC,KAAE6C,KAAlB,8BAEI,uBACA,cAAC,EAAD,CACIlB,MAAOe,EAAMsG,UACbjI,SAAU2B,EAAMuG,gBAChB1F,SAAUb,EAAMc,YAIxB,sBAAKzD,UAAWC,KAAE6C,KAAlB,UACI,uBACA,cAAC,EAAD,CACIe,QAASlB,EAAMwG,cACf3F,SAAUb,EAAMc,OAFpB,4BASPd,EAAMc,QACP,8BACI,cAAC7C,EAAD,MAGH+B,EAAMzC,OACP,qBAAKF,UAAWC,KAAEC,MAAlB,SACKyC,EAAMzC,WCpEvB,IAAM0E,GAAe,CACjBwE,cAAc,GAkBX,IAAMC,GAAkB,SAACzH,GAAD,MAAqB,CAACH,KAAM,wBAAyBG,UCf7E,SAAS0H,KACZ,IAAM7F,EAAS4B,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,IAAI9B,UACnE2F,EAAe/D,aAAuC,SAAAC,GAAK,OAAIA,EAAMiE,SAASH,gBAC9ElJ,EAAQmF,aAAsC,SAAAC,GAAK,OAAIA,EAAMC,IAAIrF,SACjEsF,EAAWC,cAEjBG,qBAAU,WACN,OAAO,WACHJ,EAAS6D,IAAgB,IACzB7D,EAASP,EAAc,QAE5B,IAKH,MAA0B/C,mBAAiB,0BAA3C,mBAAOmB,EAAP,KAAc2D,EAAd,KACA,EAAgC9E,mBAAiB,YAAjD,mBAAOqC,EAAP,KAAiB0C,EAAjB,KACA,EAAkC/E,mBAAiB,YAAnD,mBAAO+G,EAAP,KAAkBO,EAAlB,KAgCA,OAAIJ,EACO,cAAC,IAAD,CAAU/C,GAAI,WAIrB,cAAC2C,GAAD,CACIvF,OAAQA,EACRJ,MAAOA,EACPkB,SAAUA,EACV0E,UAAWA,EACXxC,YAxCY,SAAC/E,GACbxB,GAAOsF,EAASP,EAAc,KAClC+B,EAAStF,EAAEC,cAAcC,QAuCrB8E,eApCe,SAAChF,GAChBxB,GAAOsF,EAASP,EAAc,KAClCgC,EAAYvF,EAAEC,cAAcC,QAmCxBsH,gBAhCgB,SAACxH,GACjBxB,GAAOsF,EAASP,EAAc,KAClCuE,EAAa9H,EAAEC,cAAcC,QA+BzBuH,cA5Bc,WAWlB3D,EAVc,KAAVnC,GAA6B,KAAbkB,GAAiC,KAAd0E,EAKnC1E,IAAa0E,EDxBC,SAAC5F,EAAekB,GAAhB,OAAqC,SAACiB,GAC5DA,EAASP,EAAc,KACvBO,EAASR,GAAa,IACtBX,EAAiBhB,EAAOkB,GACnBsB,MAAK,SAAAC,GACFN,EAAS6D,IAAgB,OAE5BpD,OAAM,SAAA/F,GACHsF,EAASP,EAAc/E,EAAM4F,SAAW5F,EAAM4F,SAASC,KAAK7F,MAAQA,EAAMgG,aAE7EC,SAAQ,WACLX,EAASR,GAAa,QCkBjByE,CAAWpG,EAAOkB,GAJdU,EAAc,2BALdA,EAAc,sBA2BvB/E,MAAOA,ICpDZ,IAAMwJ,GACF,SADEA,GAEC,YAFDA,GAGA,WAHAA,GAIS,eAJTA,GAKK,WALLA,GAMH,QAIH,SAASC,KACZ,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAACf,GAAD,OAEtC,cAAC,IAAD,CAAOa,KAAMF,GAAYI,OAAQ,kBAAM,cAAC/C,GAAD,OACvC,cAAC,IAAD,CAAO6C,KAAMF,GAAeI,OAAQ,kBAAM,cAACR,GAAD,OAC1C,cAAC,IAAD,CAAOM,KAAMF,GAAcI,OAAQ,kBAAM,cAAC1E,EAAD,OACzC,cAAC,IAAD,CAAOwE,KAAMF,GAAuBI,OAAQ,kBAAM,cAACxD,EAAD,OAClD,cAAC,IAAD,CAAOsD,KAAMF,GAAmBI,OAAQ,kBAAM,cAACvD,EAAD,OAC9C,cAAC,IAAD,CAAOqD,KAAMF,GAAWI,OAAQ,kBAAM,cAACf,GAAD,OAEtC,cAAC,IAAD,CAAOe,OAAQ,kBAAM,cAAC/J,EAAD,YCtC9B,SAASgK,KACZ,OACI,gCACI,oBAAI1B,MAAO,CAAC2B,UAAW,SAAUC,MAAO,OAAxC,oBAEA,cAACrB,GAAD,CAAcC,KAAMa,GAAYvJ,KAAM,eACtC,cAACyI,GAAD,CAAcC,KAAMa,GAAevJ,KAAM,kBACzC,cAACyI,GAAD,CAAcC,KAAMa,GAAcvJ,KAAM,iBACxC,cAACyI,GAAD,CAAcC,KAAMa,GAAuBvJ,KAAM,0BACjD,cAACyI,GAAD,CAAcC,KAAMa,GAAmBvJ,KAAM,sBAC7C,cAACyI,GAAD,CAAcC,KAAMa,GAAWvJ,KAAM,cACrC,cAACyI,GAAD,CAAcC,KAAM,WAAY1I,KAAM,kBCL3C,SAAS+J,KACZ,IAAMrF,EAAgBQ,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,IAAIV,iBAC1EC,EAAYO,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,IAAIT,aACtEU,EAAWC,cAOjB,OALAG,qBAAU,WACNJ,GpBwC0B,SAACA,GAC/BnB,IACKwB,MAAK,SAAAC,GACFN,EAASL,EAAcW,EAASC,UAEnCE,OAAM,SAAA/F,OAGNiG,SAAQ,WACLX,EAf8B,CAAC/D,KAAM,gCoBjC1C,IAGEoD,EASD,gCACI,cAACkF,GAAD,IACA,cAACJ,GAAD,IACA,cAAC,IAAD,CAAUtD,GAAIvB,EAAY,WAAa,cAVvC,qBAAK9E,UAAW,OAAhB,SACI,cAACY,EAAD,M,sBCxBVgE,GAAe,GCArB,IAAMA,GAAe,GCSrB,IAAMuF,GAAWC,aAAgB,CAC7BC,MjBDG,WAAuF,IAAjE/E,EAAgE,uDAA7CV,GAAc0F,EAA+B,uCAIjF,OAHAA,EAAO7I,KAGA6D,GiBFfiE,SPDG,WAA0F,IAAjEjE,EAAgE,uDAA7CV,GAAc0F,EAA+B,uCAC5F,MACS,0BADDA,EAAO7I,KAEA,2BACA6D,GADP,IAEI8D,aAAckB,EAAO1I,QAIlB0D,GOPfiF,QtBHG,WAAyF,IAAjEjF,EAAgE,uDAA7CV,EAAc0F,EAA+B,uCAInF,OAHAA,EAAO7I,KAGA6D,GsBAfkF,YFPG,WAA6F,IAAjElF,EAAgE,uDAA7CV,GAAc0F,EAA+B,uCAKvF,OAJAA,EAAO7I,KAIA6D,GEGfmF,gBDRG,WAAiG,IAAjEnF,EAAgE,uDAA7CV,GAAc0F,EAA+B,uCAK3F,OAJAA,EAAO7I,KAIA6D,GCIfC,IvBFG,WAAqF,IAAjED,EAAgE,uDAA7CV,EAAc0F,EAA+B,uCACvF,OAAQA,EAAO7I,MACX,IAAK,sBACD,OAAO,2BACA6D,GADP,IAEIT,eAAe,IAGvB,IAAK,eACD,OAAO,2BACAS,GADP,IAEI7B,OAAQ6G,EAAO1I,QAGvB,IAAK,gBACD,OAAO,2BACA0D,GADP,IAEIpF,MAAOoK,EAAOpF,YAGtB,IAAK,gBACD,OAAO,2BACAI,GADP,IAEIR,UAAWwF,EAAO1I,QAG1B,IAAK,oBACD,OAAO,2BACA0D,GADP,IAEIR,WAAW,EACXC,SAAS,eAAKuF,EAAOvF,YAG7B,QACI,OAAOO,MuB7BboF,GAAQC,aAAYR,GAASS,aAAgBC,OAEpCH,MAKfI,OAAOJ,MAAQA,GCjBfK,IAASjB,OACL,cAAC,IAAMkB,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,cAAC,GAAD,UAIZO,SAASC,eAAe,W","file":"static/js/main.05955f52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__2pv3y\",\"form\":\"Login_form__J68WB\",\"item\":\"Login_item__3yq4G\",\"error\":\"Login_error__3lSpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__1iK2v\",\"form\":\"Profile_form__2Irhk\",\"photo\":\"Profile_photo__1Mrgm\",\"item\":\"Profile_item__2s20o\",\"error\":\"Profile_error__aQEnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Register_main__iR9HC\",\"form\":\"Register_form__2bOF2\",\"item\":\"Register_item__1te8c\",\"error\":\"Register_error__3uYTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2seUt\",\"text\":\"Error404_text__3vJJY\",\"image\":\"Error404_image__2JRYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pen\":\"SuperEditableSpan_pen__37tAy\",\"spanParameter\":\"SuperEditableSpan_spanParameter__3KV6Z\",\"editableSpan\":\"SuperEditableSpan_editableSpan__2mEG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2AxW5\",\"errorInput\":\"SuperInputText_errorInput__20jP4\",\"error\":\"SuperInputText_error__rhMt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1A3oo\",\"red\":\"SuperButton_red__3CQpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__16WQn\",\"spanClassName\":\"SuperCheckbox_spanClassName__TOXu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ShowComponent_item__Cw_MG\",\"h3\":\"ShowComponent_h3__1wID5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2rfiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Test_main__OSXSW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__1Z1RV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SuperNavLink_item__sVmEG\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport function Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.text}>\r\n                404<br/>\r\n                Sorry...\r\n            </div>\r\n\r\n            <img className={s.image} src={'https://images-na.ssl-images-amazon.com/images/I/51yEw1u0HqL._AC_SY1000_.jpg'} alt={'turd'}/>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar.f463a804.jpg\";","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }) => {\r\n\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","export default __webpack_public_path__ + \"static/media/loader.b6485230.gif\";","import React from 'react';\r\nimport s from './Loader.module.css'\r\nimport loadingPicture from './loader.gif'\r\n\r\nexport function Loader() {\r\n    return <img className={s.loader} src={loadingPicture}/>\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\n\r\nimport s from './SuperEditableSpan.module.css'\r\nimport SuperInputText from '../c1-SuperInputText/SuperInputText';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n    // const spanClassName = `${s.editableSpan}`\r\n    const spanClassName =\r\n        `${s.editableSpan}\r\n         ${restProps.spanClassName ? s[restProps.spanClassName] : ''}\r\n         ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <div>\r\n                        <img\r\n                            className={s.pen}\r\n                            // src='https://cdn.shopify.com/s/files/1/0573/7352/4157/products/94.png'\r\n                            src='https://iconarchive.com/download/i96727/iconsmind/outline/Pen.ico'\r\n                            alt='pen'\r\n                        />\r\n\r\n                        <span\r\n                            onDoubleClick={onDoubleClickCallBack}\r\n                            className={spanClassName}\r\n\r\n                            {...restSpanProps}\r\n                        >\r\n                            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                            {children || restProps.value}\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport avatarDefault from './avatar.jpg'\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\nimport SuperEditableSpan from '../../c1-common/c4-SuperEditableSpan/SuperEditableSpan';\r\n\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    error: string\r\n    email: string\r\n    avatar: string\r\n    newName: string\r\n    newAvatar: string\r\n\r\n    nameChange: (value: string) => void\r\n    avatarChange: (value: string) => void\r\n    changePress: () => void\r\n    logoutPress: () => void\r\n\r\n    ifImgError: string\r\n    setIfImgError: (avatar: string) => void\r\n}\r\n\r\nexport function Profile(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Profile</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <img\r\n                        className={s.photo}\r\n                        // src={props.avatar || avatarDefault}\r\n                        src={props.ifImgError || props.avatar || avatarDefault}\r\n                        onError={() => props.setIfImgError(avatarDefault)}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <b>Email:</b>{` ${props.email}`}\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <b>Name:</b>\r\n                    <div>\r\n                        <SuperEditableSpan\r\n                            value={props.newName}\r\n                            onChangeText={props.nameChange}\r\n                            disabled={props.isBusy}\r\n                            size={50}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <b>Avatar link:</b>\r\n                    <div>\r\n                        <SuperEditableSpan\r\n                            value={props.newAvatar}\r\n                            onChangeText={props.avatarChange}\r\n                            disabled={props.isBusy}\r\n                            size={75}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.changePress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Change profile\r\n                    </SuperButton>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.logoutPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Logout\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\n// Test mode\r\n// const baseURL = 'http://localhost:7542/2.0/'\r\n// Normal mode\r\nconst baseURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nconst instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<LoginResponseType>('auth/me', {});\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe});\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>('auth/me');\r\n    },\r\n\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>('auth/register', {email, password});\r\n    },\r\n\r\n    editProfile(name: string, avatar: string) {\r\n        return instance.put<EditProfileResponseType>('auth/me', {name, avatar});\r\n    },\r\n\r\n}\r\n\r\nexport type EditProfileResponseType = {\r\n    updatedUser: LoginResponseType\r\n    error?: string\r\n}\r\n\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // количество колод\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean            // подтвердил ли почту\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\n\r\ntype RegisterResponseType = {\r\n    error?: string\r\n}\r\n\r\n\r\nexport type LogoutResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n","import {Dispatch} from 'redux';\nimport {authAPI, LoginResponseType} from '../dal/cards-api';\n\nconst initialState = {\n    isInitialized: false,\n    isBusy: false,\n    error: '',\n    isLogined: false,\n    userData: {} as LoginResponseType,\n}\ntype StateType = typeof initialState\n\n\nexport function appReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'APP/SET-INITIALIZED':\n            return {\n                ...state,\n                isInitialized: true,\n            }\n\n        case 'APP/SET-BUSY':\n            return {\n                ...state,\n                isBusy: action.value,\n            }\n\n        case 'APP/SET-ERROR':\n            return {\n                ...state,\n                error: action.errorText,\n            }\n\n        case 'APP/SET-LOGIN':\n            return {\n                ...state,\n                isLogined: action.value,\n            }\n\n        case 'APP/SET-USER-DATA':\n            return {\n                ...state,\n                isLogined: true,\n                userData: {...action.userData},\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setAppInitializedAC = () => ({type: 'APP/SET-INITIALIZED'} as const)\nexport const setAppBusyAC = (value: boolean) => ({type: 'APP/SET-BUSY', value} as const)\nexport const setAppErrorAC = (errorText: string) => ({type: 'APP/SET-ERROR', errorText} as const)\nexport const clearAppLoginAC = (value: boolean) => ({type: 'APP/SET-LOGIN', value} as const)\nexport const setUserDataAC = (userData: LoginResponseType) => ({type: 'APP/SET-USER-DATA', userData} as const)\n\nexport const initializeTC = () => (dispatch: Dispatch) => {\n    authAPI.me()\n        .then(response => {\n            dispatch(setUserDataAC(response.data))\n        })\n        .catch(error => {\n\n        })\n        .finally(() => {\n            dispatch(setAppInitializedAC())\n        })\n}\n\ntype ActionType =\n    | ReturnType<typeof setAppInitializedAC>\n    | ReturnType<typeof setAppBusyAC>\n    | ReturnType<typeof setAppErrorAC>\n    | ReturnType<typeof clearAppLoginAC>\n    | ReturnType<typeof setUserDataAC>","import {Dispatch} from 'redux';\nimport {setAppBusyAC, setAppErrorAC, clearAppLoginAC, setUserDataAC} from './appReducer';\nimport {authAPI} from '../dal/cards-api';\n\nconst initialState = {\n}\ntype StateType = typeof initialState\n\n\nexport function profileReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}\n\nexport const changeProfileTC = (name: string, avatar: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.editProfile(name, avatar)\n        .then(response => {\n            dispatch(setUserDataAC(response.data.updatedUser))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\nexport const logoutTC = () => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.logout()\n        .then(response => {\n            dispatch(clearAppLoginAC(false))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\ntype ActionType = any\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {LoginResponseType} from '../../../dal/cards-api';\r\nimport {Profile} from './Profile';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {changeProfileTC, logoutTC} from '../../../bll/profileReducer';\r\n\r\n\r\nexport function ProfileContainer() {\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const {email, name, avatar} = useSelector<AppRootStateType, LoginResponseType>(state => state.app.userData)\r\n    const dispatch = useDispatch()\r\n\r\n    const [newName, setNewName] = useState(name)\r\n    const [newAvatar, setNewAvatar] = useState(avatar || 'none')\r\n\r\n    const [ifImgError, setIfImgError] = useState('')\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n\r\n    const changePress = () => {\r\n        dispatch(changeProfileTC(newName, newAvatar))\r\n    }\r\n\r\n    const logoutPress = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n\r\n    if (!isLogined) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Profile\r\n            isBusy={isBusy}\r\n            error={error}\r\n            email={email}\r\n            newName={newName}\r\n            avatar={avatar || 'none'}\r\n            newAvatar={newAvatar}\r\n            nameChange={setNewName}\r\n            avatarChange={setNewAvatar}\r\n\r\n            changePress={changePress}\r\n            logoutPress={logoutPress}\r\n            ifImgError={ifImgError}\r\n            setIfImgError={setIfImgError}\r\n        />\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PwdRestore() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Restore Password</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PwdNew() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>New Password</h1>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, MouseEvent} from 'react';\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\nimport s from './Login.module.css'\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    rememberMeChange: (e: MouseEvent<HTMLInputElement>) => void\r\n    loginPress: (mode: boolean) => void\r\n}\r\n\r\nexport function Login(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Login</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperInputText\r\n                        type={'checkbox'}\r\n                        checked={props.rememberMe}\r\n                        onClick={props.rememberMeChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={() => props.loginPress(false)}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Login\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {/*======================================================*/}\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={'nya-admin@nya.nya'}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={'1qazxcvBG'}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperInputText\r\n                        type={'checkbox'}\r\n                        checked={false}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={() => props.loginPress(true)}\r\n                        disabled={props.isBusy}\r\n                        red\r\n                    >\r\n                        Login as Ignat\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {/*======================================================*/}\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\nimport {authAPI} from '../dal/cards-api';\nimport {setAppBusyAC, setAppErrorAC, setUserDataAC} from './appReducer';\n\nconst initialState = {\n}\ntype StateType = typeof initialState\n\n\nexport function loginReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.login(email,password,rememberMe)\n        .then(response => {\n            dispatch(setUserDataAC(response.data))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\ntype ActionType = any\n","import React, {ChangeEvent, MouseEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {Login} from './Login';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {loginTC} from '../../../bll/loginReducer';\r\n\r\nexport function LoginContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    const [password, setPassword] = useState<string>('11111111')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const rememberMeChange = (e: MouseEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const loginPress = (modeIgnat: boolean) => {\r\n        if (email === '' || password === '') {\r\n            dispatch(setAppErrorAC('Fill email/password fields!'))\r\n            return\r\n        }\r\n\r\n        if (modeIgnat) {\r\n            dispatch(loginTC('nya-admin@nya.nya','1qazxcvBG',false))\r\n        } else\r\n        {\r\n            dispatch(loginTC(email, password, rememberMe))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if (isLogined) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Login\r\n                isBusy={isBusy}\r\n                email={email}\r\n                password={password}\r\n                rememberMe={rememberMe}\r\n                emailChange={emailChange}\r\n                passwordChange={passwordChange}\r\n                rememberMeChange={rememberMeChange}\r\n                loginPress={loginPress}\r\n                error={error}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChangeOption,\r\n        onChange,\r\n        ...restProps\r\n    }) => {\r\n\r\n    // map options with key\r\n    const mappedOptions: any[] =\r\n        options\r\n            ? options.map((op, i) =>\r\n                <option\r\n                    key={i}\r\n                    value={op}\r\n                    // selected={restProps.value === op}\r\n                >\r\n                    {op}\r\n                </option>)\r\n            : []\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type,\r\n        name,\r\n        value,\r\n        onChange,\r\n        options,\r\n        onChangeOption,\r\n        ...restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n                name={name}\r\n                checked={value === o}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeRange,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                style={{boxSizing: 'border-box', width: '200px', height: '20px'}}\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React, {ReactNode} from 'react';\r\nimport s from './ShowComponent.module.css'\r\n\r\ntype PropsType = {\r\n    name: string\r\n    node: ReactNode\r\n}\r\n\r\nexport function ShowComponent(props: PropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <h3 className={s.h3}>{props.name}</h3>\r\n            </div>\r\n            {props.node}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './SuperNavLink.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    goTo: string\r\n    text: string\r\n}\r\n\r\nexport function SuperNavLink(props: PropsType) {\r\n    return (\r\n            <NavLink className={s.item} to={props.goTo}>{props.text}</NavLink>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Test.module.css'\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from '../../c1-common/c3-SuperCheckbox/SuperCheckbox';\r\nimport SuperEditableSpan from '../../c1-common/c4-SuperEditableSpan/SuperEditableSpan';\r\nimport SuperSelect from '../../c1-common/c5-SuperSelect/SuperSelect';\r\nimport SuperRadio from '../../c1-common/c6-SuperRadio/SuperRadio';\r\nimport SuperRange from '../../c1-common/c7-SuperRange/SuperRange';\r\nimport {ShowComponent} from '../../ShowComponent/ShowComponent';\r\nimport {SuperNavLink} from '../../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\nconst arr = ['Super', 'Select', 'SuperSelect']\r\n\r\nexport function Test() {\r\n    // const [value, onChangeOption] = useState(arr[2])\r\n    // const [value1Range, setValue1Range] = useState(25)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test</h1>\r\n\r\n            <div className={s.main}>\r\n                <ShowComponent name={'SuperInputText'} node={\r\n                    <SuperInputText\r\n                        value={'SuperInputText'}\r\n                        // onChangeText={setText}\r\n                        // onEnter={showAlert}\r\n                        // error={error}\r\n                        // spanClassName={s.testSpanError}\r\n                    />\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperButton'} node={\r\n                    <SuperButton>\r\n                        SuperButton\r\n                    </SuperButton>\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperCheckbox'} node={\r\n                    <SuperCheckbox\r\n                        // checked={checked}\r\n                        // onChangeChecked={setChecked}\r\n                    >\r\n                        SuperCheckbox\r\n                    </SuperCheckbox>\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperEditableSpan'} node={\r\n                    <SuperEditableSpan\r\n                        value={'SuperEditableSpan'}\r\n                        // onChangeText={setValue}\r\n                        // spanProps={{children: value ? undefined : 'enter text...'}}\r\n                        //\r\n                        // test props\r\n                        // onEnter={() => alert('Hello, onEnter!')}\r\n                        // onBlur={() => alert('Hello, onBlur!')}\r\n                        // spanClassName={'spanParameter'}\r\n                    />\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperSelect'} node={\r\n                    <SuperSelect\r\n                        value={'SuperSelect'}\r\n                        options={arr}\r\n                        // onChangeOption={onChangeOption}\r\n                        // onChange={() => alert('This is SELECT onChange')}\r\n                    />\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperRadio'} node={\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={arr[2]}\r\n                        // value={value}\r\n                        // name={'radio'}\r\n                        // onChangeOption={onChangeOption}\r\n                        // onChange={() => alert('This is RADIO onChange')}\r\n                    />\r\n                }/>\r\n\r\n\r\n                <ShowComponent name={'SuperRange'} node={\r\n                    <SuperRange\r\n                        value={25}\r\n                        // value={value1Range}\r\n                        // onChangeRange={setStartRange}\r\n                    />\r\n                }/>\r\n\r\n                {/*<SuperDoubleRange/>*/}\r\n\r\n                <ShowComponent name={'SuperNavLink'} node={\r\n                    <SuperNavLink\r\n                        goTo={'/test'}\r\n                        text={'Go to Test page'}\r\n                    />\r\n                }/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport { Loader } from '../../Loader/Loader';\r\nimport s from './Register.module.css'\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    password: string\r\n    password2: string\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    password2Change: (e: ChangeEvent<HTMLInputElement>) => void\r\n    registerPress: () => void\r\n}\r\n\r\nexport function Register(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Register</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password (repeat)\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password2}\r\n                        onChange={props.password2Change}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.registerPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Register\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import { Dispatch } from \"redux\"\nimport {setAppBusyAC, setAppErrorAC} from './appReducer';\nimport {authAPI} from '../dal/cards-api';\n\nconst initialState = {\n    isRegistered: false,\n}\ntype StateType = typeof initialState\n\n\nexport function registerReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'REGISTER/SET-REGISTER':\n            return {\n                ...state,\n                isRegistered: action.value,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setRegisteredAC = (value: boolean) => ({type: 'REGISTER/SET-REGISTER', value} as const)\n\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.register(email, password)\n        .then(response => {\n            dispatch(setRegisteredAC(true))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\ntype ActionType =\n    | ReturnType<typeof setRegisteredAC>\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Register } from './Register';\r\nimport {registerTC, setRegisteredAC} from '../../../bll/registerReducer';\r\n\r\nexport function RegisterContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setRegisteredAC(false))\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    // const [email, setEmail] = useState<string>('')\r\n    // const [password1, setPassword1] = useState<string>('')\r\n    // const [password2, setPassword2] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    const [password, setPassword] = useState<string>('11111111')\r\n    const [password2, setPassword2] = useState<string>('11111111')\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const password2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const registerPress = () => {\r\n        if (email === '' || password === '' || password2 === '') {\r\n            dispatch(setAppErrorAC('Fill all fields!'))\r\n            return\r\n        }\r\n\r\n        if (password !== password2) {\r\n            dispatch(setAppErrorAC('Passwords do not match!'))\r\n            return\r\n        }\r\n\r\n        dispatch(registerTC(email, password))\r\n    }\r\n\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Register\r\n            isBusy={isBusy}\r\n            email={email}\r\n            password={password}\r\n            password2={password2}\r\n            emailChange={emailChange}\r\n            passwordChange={passwordChange}\r\n            password2Change={password2Change}\r\n            registerPress={registerPress}\r\n            error={error}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Error404} from '../Error404/Error404';\r\nimport {ProfileContainer} from '../Profile/ProfileContainer';\r\nimport {PwdRestore} from '../PwdRestore/PwdRestore';\r\nimport {PwdNew} from '../PwdNew/PwdNew';\r\nimport {LoginContainer} from '../Login/LoginContainer';\r\nimport {Test} from '../Test/Test';\r\nimport {RegisterContainer} from '../Register/RegisterContainer';\r\n\r\n/*\r\nлогинизация\r\nрегистрация\r\nпрофайл\r\n404 (можно застилизовать заранее)\r\nвосстановление пароля\r\nввод нового пароля\r\nтестовая - отобразить/продемонстрировать все SuperКомпоненты\r\n */\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RESTORE: '/pwd-restore',\r\n    PASSWORD_NEW: '/pwd-new',\r\n    TEST: '/test',\r\n}\r\n\r\n\r\nexport function Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Test/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <LoginContainer/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <RegisterContainer/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\r\n                <Route path={PATH.PASSWORD_RESTORE} render={() => <PwdRestore/>}/>\r\n                <Route path={PATH.PASSWORD_NEW} render={() => <PwdNew/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {PATH} from '../c2-pages/Routes/Routes';\r\nimport {SuperNavLink} from '../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\n\r\nexport function Header() {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center', color: 'red'}}>FRIDAY</h1>\r\n\r\n            <SuperNavLink goTo={PATH.LOGIN} text={'Login page'}/>\r\n            <SuperNavLink goTo={PATH.REGISTER} text={'Register page'}/>\r\n            <SuperNavLink goTo={PATH.PROFILE} text={'Profile page'}/>\r\n            <SuperNavLink goTo={PATH.PASSWORD_RESTORE} text={'Restore password page'}/>\r\n            <SuperNavLink goTo={PATH.PASSWORD_NEW} text={'New password page'}/>\r\n            <SuperNavLink goTo={PATH.TEST} text={'Test page'}/>\r\n            <SuperNavLink goTo={'Error404'} text={'Error page'}/>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from './components/Header/Header';\r\nimport {Routes} from './components/c2-pages/Routes/Routes';\r\nimport {AppRootStateType} from './bll/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Loader} from './components/Loader/Loader';\r\nimport {initializeTC} from './bll/appReducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nexport function App() {\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeTC())\r\n    }, [])\r\n\r\n\r\n    if (!isInitialized) {\r\n        return (\r\n            <div className={'init'}>\r\n                <Loader/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Routes/>\r\n            <Redirect to={isLogined ? '/profile' : '/login'}/>\r\n        </div>\r\n    )\r\n}\r\n","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function passwordNewReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function passwordRestoreReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk';\nimport {loginReducer} from './loginReducer'\nimport {profileReducer} from './profileReducer'\nimport {registerReducer} from './registerReducer'\nimport {passwordNewReducer} from './passwordNewReducer';\nimport {passwordRestoreReducer} from './passwordRestoreReducer';\nimport {appReducer} from './appReducer';\n\nconst reducers = combineReducers({\n    login: loginReducer,\n    register: registerReducer,\n    profile: profileReducer,\n    passwordNew: passwordNewReducer,\n    passwordRestore: passwordRestoreReducer,\n    app: appReducer,\n})\n\nconst store = createStore(reducers,applyMiddleware(thunkMiddleware))\n\nexport default store\n\nexport type AppRootStateType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {App} from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './bll/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}