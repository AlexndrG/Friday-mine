{"version":3,"sources":["components/c2-pages/Packs/Packs.module.css","components/c2-pages/Login/Login.module.css","components/c2-pages/Cards/Cards.module.css","components/c2-pages/Profile/Profile.module.css","components/c2-pages/PwdNew/PwdNew.module.css","components/c2-pages/PwdRestore/PwdRestore.module.css","components/c2-pages/Register/Register.module.css","components/DoubleRangeCardsCount/DoubleRangeCardsCount.module.css","components/PerPage/PerPage.module.css","components/c2-pages/Error404/Error404.module.css","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.module.css","components/c1-common/c1-SuperInputText/SuperInputText.module.css","components/c1-common/c2-SuperButton/SuperButton.module.css","components/c1-common/c3-SuperCheckbox/SuperCheckbox.module.css","components/Loader/Loader.module.css","components/MyPacksCheckBox/MyPacksCheckBox.module.css","components/Paginator/Paginator.module.css","components/FieldSearch/FieldSearch.module.css","components/c1-common/c7-SuperRange/SuperRange.module.css","components/c1-common/c91-SuperNavLink/SuperNavLink.module.css","components/c2-pages/Error404/Error404.tsx","components/c2-pages/Profile/avatar.jpg","components/c1-common/c2-SuperButton/SuperButton.tsx","components/Loader/loader.gif","components/Loader/Loader.tsx","components/c1-common/c1-SuperInputText/SuperInputText.tsx","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.tsx","components/c2-pages/Profile/Profile.tsx","dal/instance.ts","dal/auth-api.ts","bll/appReducer.ts","bll/profileReducer.ts","components/c2-pages/Profile/ProfileContainer.tsx","components/c2-pages/PwdRestore/PwdRestore.tsx","bll/passwordRestoreReducer.ts","components/c2-pages/PwdRestore/PwdRestoreContainer.tsx","components/c2-pages/Login/Login.tsx","bll/loginReducer.ts","components/c2-pages/Login/LoginContainer.tsx","components/c2-pages/Register/Register.tsx","bll/registerReducer.ts","components/c2-pages/Register/RegisterContainer.tsx","components/c2-pages/PwdNew/PwdNew.tsx","bll/passwordNewReducer.ts","components/c2-pages/PwdNew/PwdNewContainer.tsx","components/TableLinePack/TableLinePack.tsx","dal/packs-api.ts","bll/packsReducer.ts","dal/cards-api.ts","bll/cardsReducer.ts","components/PerPage/PerPage.tsx","components/c1-common/c3-SuperCheckbox/SuperCheckbox.tsx","components/MyPacksCheckBox/MyPacksCheckBox.tsx","components/Paginator/Paginator.tsx","components/FieldSearch/FieldSearch.tsx","components/c1-common/c7-SuperRange/SuperRange.tsx","components/DoubleRangeCardsCount/DoubleRangeCardsCount.tsx","components/c2-pages/Packs/Packs.tsx","components/c2-pages/Packs/PacksContainer.tsx","components/TableLineCard/TableLineCard.tsx","components/c2-pages/Cards/Cards.tsx","components/c2-pages/Cards/CardsContainer.tsx","components/c2-pages/Routes/Routes.tsx","components/c1-common/c91-SuperNavLink/SuperNavLink.tsx","components/Header/Header.tsx","App.tsx","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","error","text","image","src","alt","SuperButton","red","restProps","finalClassName","default","Loader","loader","loadingPicture","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","type","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","editableSpan","pen","Profile","props","main","titleProgressError","isBusy","form","item","photo","ifImgError","avatar","avatarDefault","onError","setIfImgErrorHandler","email","newName","nameChangeText","disabled","size","newAvatar","avatarChangeText","onClick","changePress","profileChanged","logoutPress","instance","axios","create","baseURL","withCredentials","authAPI","post","password","rememberMe","delete","name","put","from","message","resetPasswordToken","initialState","isInitialized","isLogined","userData","setAppBusyAC","setAppErrorAC","errorText","setUserDataAC","ProfileContainer","useSelector","state","app","dispatch","useDispatch","setNewName","setNewAvatar","setIfImgError","setProfileChanged","useEffect","then","response","data","updatedUser","catch","finally","changeProfileTC","to","PwdRestore","emailChange","restorePress","isRestoring","setIsRestoringAC","PwdRestoreContainer","passwordRestore","setEmail","pwdRestoreTC","Login","passwordChange","checked","rememberMeChange","loginPress","loginAsIgnatPress","loginTC","LoginContainer","setPassword","setRememberMe","Register","password2","password2Change","registerPress","isRegistered","setRegisteredAC","RegisterContainer","register","setPassword2","registerTC","PwdNew","newPress","isPwdNew","setPwdNewAC","PwdNewContainer","passwordNew","token","useParams","pwdNewTC","TableLinePack","tableStyle","borderWidth","borderStyle","borderColor","width","cellStyle","padding","textAlign","wordBreak","head","style","nameFieldName","nameFieldButtons","nameFieldLink","cardsCountField","cardsCountFieldButtons","updatedField","updatedFieldButtons","buttonsFieldName","buttonsFieldButtons","packsAPI","get","params","newPack","cardsPack","id","updatePack","requestPacksData","packName","min","max","sortPacks","page","pageCount","user_id","packsData","setCurrentPackPageAC","pageNumber","setRangeSearchAC","getPacksTC","getState","packs","cardsAPI","initRequestCardsData","cardAnswer","cardQuestion","cardsPack_id","sortCards","requestCardsData","cardsData","setCurrentCardPageAC","perPageArr","PerPage","packsCount","cardsCount","cards","activeCount","itemText","nameText","map","p","itemActive","setPacksPerPageAC","setCardsPerPageAC","SuperCheckbox","onChangeChecked","checkbox","MyPacksCheckBox","_id","requestUserId","setMyPacksCheckBoxAC","pageButtons","pageButtonsTitle","Paginator","packsTotalCount","cardPacksTotalCount","packsPerPage","packsCurrentPage","cardsTotalCount","cardsPerPage","cardsCurrentPage","totalPages","Math","ceil","currentPage","setCurrentFunction","pageFunctions","pageDisables","b","i","title","FieldSearch","initText","searchField","search","setSearch","timerId","setTimeout","setCardQuestionSearchAC","setCardAnswerSearchAC","clearInterval","SuperRange","onChangeRange","finalRangeClassName","range","DoubleRangeCardsCount","minCardsCount","maxCardsCount","minValue","maxValue","minRangeValue","setMinRangeValue","maxRangeValue","setMaxRangeValue","sortFlag","setNewRange","superRange","onMouseUp","rangeValue","Packs","sortButton","sortParameter","buttonName","buttonSort","sortName","sortButtonActive","sortPress","sortButtons","headBlocks","headBlockLeft","headBlockRight","addPress","cardPacks","c","updated","substr","buttonActions","delPress","userId","updatePress","footBlocks","footBlockLeft","footBlockRight","PacksContainer","sortString","setSortPacksAC","delPackTC","TableLineCard","questionField","answerField","gradeField","Cards","packUserId","question","answer","grade","CardsContainer","cardsPackId","PATH","Routes","path","exact","render","SuperNavLink","goTo","margin","border","Header","color","App","reducers","combineReducers","action","login","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26fa5e42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__22Aih\",\"titleProgressError\":\"Packs_titleProgressError__1GCMj\",\"form\":\"Packs_form__1yklS\",\"item\":\"Packs_item__1LZfA\",\"headBlocks\":\"Packs_headBlocks__1tSt2\",\"headBlockLeft\":\"Packs_headBlockLeft__2hbEd\",\"headBlockRight\":\"Packs_headBlockRight__yFCq2\",\"footBlocks\":\"Packs_footBlocks__2bU8N\",\"footBlockLeft\":\"Packs_footBlockLeft__2Rr9q\",\"footBlockRight\":\"Packs_footBlockRight__1jqnr\",\"buttonSort\":\"Packs_buttonSort__20yw1\",\"sortButtonActive\":\"Packs_sortButtonActive__2M0f0\",\"buttonActions\":\"Packs_buttonActions__1NIko\",\"error\":\"Packs_error__2XKGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__2pv3y\",\"titleProgressError\":\"Login_titleProgressError__3C8jB\",\"form\":\"Login_form__J68WB\",\"item\":\"Login_item__3yq4G\",\"error\":\"Login_error__3lSpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Cards_main__3bhYv\",\"titleProgressError\":\"Cards_titleProgressError__tm6ze\",\"form\":\"Cards_form__2SEuQ\",\"item\":\"Cards_item__27GUR\",\"headBlocks\":\"Cards_headBlocks__3UfkU\",\"headBlockLeft\":\"Cards_headBlockLeft__vzIhD\",\"headBlockRight\":\"Cards_headBlockRight__3dXZ3\",\"footBlocks\":\"Cards_footBlocks__3MD31\",\"footBlockLeft\":\"Cards_footBlockLeft__2KgZL\",\"footBlockRight\":\"Cards_footBlockRight__2RRVF\",\"buttonSort\":\"Cards_buttonSort__23BP-\",\"sortButtonActive\":\"Cards_sortButtonActive__3U3f3\",\"buttonActions\":\"Cards_buttonActions__HgPQ4\",\"error\":\"Cards_error__r4Kjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__1iK2v\",\"titleProgressError\":\"Profile_titleProgressError__2H4ww\",\"form\":\"Profile_form__2Irhk\",\"photo\":\"Profile_photo__1Mrgm\",\"item\":\"Profile_item__2s20o\",\"error\":\"Profile_error__aQEnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PwdNew_main__28vTm\",\"titleProgressError\":\"PwdNew_titleProgressError__2vDRW\",\"form\":\"PwdNew_form__-Zxba\",\"item\":\"PwdNew_item__107fN\",\"error\":\"PwdNew_error__1qOcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PwdRestore_main__2WL3I\",\"titleProgressError\":\"PwdRestore_titleProgressError__vLK_Z\",\"form\":\"PwdRestore_form__2Zrwb\",\"item\":\"PwdRestore_item__16XhF\",\"error\":\"PwdRestore_error__IJ61m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Register_main__iR9HC\",\"titleProgressError\":\"Register_titleProgressError__3szo_\",\"form\":\"Register_form__2bOF2\",\"item\":\"Register_item__1te8c\",\"error\":\"Register_error__3uYTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DoubleRangeCardsCount_form__3jBIl\",\"superRange\":\"DoubleRangeCardsCount_superRange__2H5pS\",\"rangeValue\":\"DoubleRangeCardsCount_rangeValue__3vYCI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PerPage_main__11CBf\",\"form\":\"PerPage_form__17PWH\",\"itemText\":\"PerPage_itemText__32oFU\",\"item\":\"PerPage_item__1kMyy\",\"itemActive\":\"PerPage_itemActive__13fgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2seUt\",\"text\":\"Error404_text__3vJJY\",\"image\":\"Error404_image__2JRYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pen\":\"SuperEditableSpan_pen__37tAy\",\"spanParameter\":\"SuperEditableSpan_spanParameter__3KV6Z\",\"editableSpan\":\"SuperEditableSpan_editableSpan__2mEG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2AxW5\",\"errorInput\":\"SuperInputText_errorInput__20jP4\",\"error\":\"SuperInputText_error__rhMt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1A3oo\",\"red\":\"SuperButton_red__3CQpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__16WQn\",\"spanClassName\":\"SuperCheckbox_spanClassName__TOXu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2rfiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MyPacksCheckBox_form__3_fVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Paginator_form__2QBNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FieldSearch_form__1V8Yc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__1Z1RV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SuperNavLink_item__sVmEG\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport function Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.text}>\r\n                404<br/>\r\n                Sorry...\r\n            </div>\r\n\r\n            <img className={s.image} src={'https://images-na.ssl-images-amazon.com/images/I/51yEw1u0HqL._AC_SY1000_.jpg'} alt={'turd'}/>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar.f463a804.jpg\";","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }) => {\r\n\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","export default __webpack_public_path__ + \"static/media/loader.b6485230.gif\";","import React from 'react';\r\nimport s from './Loader.module.css'\r\nimport loadingPicture from './loader.gif'\r\n\r\nexport function Loader() {\r\n    return <img className={s.loader} src={loadingPicture}/>\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\n\r\nimport s from './SuperEditableSpan.module.css'\r\nimport SuperInputText from '../c1-SuperInputText/SuperInputText';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n    // const spanClassName = `${s.editableSpan}`\r\n    const spanClassName =\r\n        `${s.editableSpan}\r\n         ${restProps.spanClassName ? s[restProps.spanClassName] : ''}\r\n         ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <div>\r\n                        <img\r\n                            className={s.pen}\r\n                            // src='https://cdn.shopify.com/s/files/1/0573/7352/4157/products/94.png'\r\n                            src='https://iconarchive.com/download/i96727/iconsmind/outline/Pen.ico'\r\n                            alt='pen'\r\n                        />\r\n\r\n                        <span\r\n                            onDoubleClick={onDoubleClickCallBack}\r\n                            className={spanClassName}\r\n\r\n                            {...restSpanProps}\r\n                        >\r\n                            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                            {children || restProps.value}\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport avatarDefault from './avatar.jpg'\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\nimport SuperEditableSpan from '../../c1-common/c4-SuperEditableSpan/SuperEditableSpan';\r\n\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    error: string\r\n    email: string\r\n    avatar: string\r\n    newName: string\r\n    newAvatar: string\r\n\r\n    nameChangeText: (value: string) => void\r\n    avatarChangeText: (value: string) => void\r\n    changePress: () => void\r\n    logoutPress: () => void\r\n\r\n    ifImgError: string\r\n    setIfImgErrorHandler: () => void\r\n\r\n    profileChanged: boolean\r\n}\r\n\r\nexport function Profile(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.titleProgressError}>\r\n                <h1>Profile</h1>\r\n                {\r\n                    props.isBusy &&\r\n                    <div>\r\n                        <Loader/>\r\n                    </div>\r\n                }\r\n                {\r\n                    props.error &&\r\n                    <div className={s.error}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <img\r\n                        className={s.photo}\r\n                        src={props.ifImgError || props.avatar || avatarDefault}\r\n                        onError={props.setIfImgErrorHandler}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <b>Email:</b>{` ${props.email}`}\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <b>Name:</b>\r\n                    <div>\r\n                        <SuperEditableSpan\r\n                            value={props.newName}\r\n                            onChangeText={props.nameChangeText}\r\n                            disabled={props.isBusy}\r\n                            size={50}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <b>Avatar link:</b>\r\n                    <div>\r\n                        <SuperEditableSpan\r\n                            value={props.newAvatar}\r\n                            onChangeText={props.avatarChangeText}\r\n                            disabled={props.isBusy}\r\n                            size={75}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.changePress}\r\n                        disabled={!props.profileChanged || props.isBusy}\r\n                    >\r\n                        Change profile\r\n                    </SuperButton>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.logoutPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Logout\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\n// Test mode\r\n// const baseURL = 'http://localhost:7542/2.0/'\r\n// Normal mode\r\nconst baseURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n})","import {instance} from './instance';\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<LoginResponseType>('auth/me', {});\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe});\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>('auth/me');\r\n    },\r\n\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>('auth/register', {email, password});\r\n    },\r\n\r\n    editProfile(name: string, avatar: string) {\r\n        return instance.put<EditProfileResponseType>('auth/me', {name, avatar});\r\n    },\r\n\r\n    pwdRestore(email: string) {\r\n        return instance.post<PwdRestoreResponseType>('auth/forgot', {email, from, message});\r\n    },\r\n\r\n    pwdNew(password: string, resetPasswordToken: string) {\r\n        return instance.post<PwdNewResponseType>('auth/set-new-password', {password, resetPasswordToken});\r\n    },\r\n}\r\n\r\n\r\nexport type PwdNewResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\n\r\nexport type PwdRestoreResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nconst from = 'test-front-admin <ai73a@yandex.by>'\r\nconst message = `<div>Password recovery link: <a href='https://alexndrg.github.io/Friday-mine/#/pwd-new/$token$'>Password recovery link</a></div>`\r\n\r\n\r\nexport type EditProfileResponseType = {\r\n    updatedUser: LoginResponseType\r\n    error?: string\r\n}\r\n\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // количество колод\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean            // подтвердил ли почту\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\n\r\ntype RegisterResponseType = {\r\n    error?: string\r\n}\r\n\r\n\r\nexport type LogoutResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n","import {Dispatch} from 'redux';\nimport {authAPI, LoginResponseType} from '../dal/auth-api';\n\nconst initialState = {\n    isInitialized: false,\n    isBusy: false,\n    error: '',\n    isLogined: false,\n    userData: {} as LoginResponseType,\n}\ntype StateType = typeof initialState\n\n\nexport function appReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'APP/SET-INITIALIZED':\n            return {\n                ...state,\n                isInitialized: true,\n            }\n\n        case 'APP/SET-BUSY':\n            return {\n                ...state,\n                isBusy: action.value,\n            }\n\n        case 'APP/SET-ERROR':\n            return {\n                ...state,\n                error: action.errorText,\n            }\n\n        case 'APP/SET-LOGIN':\n            return {\n                ...state,\n                isLogined: action.value,\n            }\n\n        case 'APP/SET-USER-DATA':\n            return {\n                ...state,\n                isLogined: true,\n                userData: {...action.userData},\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setAppInitializedAC = () => ({type: 'APP/SET-INITIALIZED'} as const)\nexport const setAppBusyAC = (value: boolean) => ({type: 'APP/SET-BUSY', value} as const)\nexport const setAppErrorAC = (errorText: string) => ({type: 'APP/SET-ERROR', errorText} as const)\nexport const setAppLoginAC = (value: boolean) => ({type: 'APP/SET-LOGIN', value} as const)\nexport const setUserDataAC = (userData: LoginResponseType) => ({type: 'APP/SET-USER-DATA', userData} as const)\n\nexport const initializeTC = () => (dispatch: Dispatch) => {\n    authAPI.me()\n        .then(response => {\n            dispatch(setUserDataAC(response.data))\n        })\n        .catch(error => {\n\n        })\n        .finally(() => {\n            dispatch(setAppInitializedAC())\n        })\n}\n\ntype ActionType =\n    | ReturnType<typeof setAppInitializedAC>\n    | ReturnType<typeof setAppBusyAC>\n    | ReturnType<typeof setAppErrorAC>\n    | ReturnType<typeof setAppLoginAC>\n    | ReturnType<typeof setUserDataAC>","import {Dispatch} from 'redux';\nimport {setAppBusyAC, setAppErrorAC, setAppLoginAC, setUserDataAC} from './appReducer';\nimport {authAPI} from '../dal/auth-api';\n\nconst initialState = {\n}\ntype StateType = typeof initialState\n\n\nexport function profileReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}\n\nexport const changeProfileTC = (name: string, avatar: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.editProfile(name, avatar)\n        .then(response => {\n            dispatch(setUserDataAC(response.data.updatedUser))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\nexport const logoutTC = () => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.logout()\n        .then(response => {\n            dispatch(setAppLoginAC(false))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\ntype ActionType = any\n","import React, {useEffect, useState} from 'react';\r\nimport avatarDefault from './avatar.jpg'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {LoginResponseType} from '../../../dal/auth-api';\r\nimport {Profile} from './Profile';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {changeProfileTC, logoutTC} from '../../../bll/profileReducer';\r\n\r\n\r\nexport function ProfileContainer() {\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const {email, name, avatar} = useSelector<AppRootStateType, LoginResponseType>(state => state.app.userData)\r\n    const dispatch = useDispatch()\r\n\r\n    const [newName, setNewName] = useState(name)\r\n    const [newAvatar, setNewAvatar] = useState(avatar || 'none')\r\n\r\n    const [ifImgError, setIfImgError] = useState('')\r\n\r\n    const [profileChanged, setProfileChanged] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setIfImgError(avatar => '')\r\n    }, [avatar])\r\n\r\n    const nameChangeText = (value: string) => {\r\n        setProfileChanged(true)\r\n        setNewName(value)\r\n    }\r\n\r\n    const avatarChangeText = (value: string) => {\r\n        setProfileChanged(true)\r\n        setNewAvatar(value)\r\n    }\r\n\r\n\r\n    const changePress = () => {\r\n        dispatch(changeProfileTC(newName, newAvatar))\r\n        setProfileChanged(false)\r\n    }\r\n\r\n    const logoutPress = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    const setIfImgErrorHandler = () => {\r\n        setIfImgError(avatarDefault)\r\n    }\r\n\r\n    if (!isLogined) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Profile\r\n            isBusy={isBusy}\r\n            error={error}\r\n            email={email}\r\n            newName={newName}\r\n            avatar={avatar || 'none'}\r\n            newAvatar={newAvatar}\r\n            nameChangeText={nameChangeText}\r\n            avatarChangeText={avatarChangeText}\r\n\r\n            changePress={changePress}\r\n            logoutPress={logoutPress}\r\n            ifImgError={ifImgError}\r\n            setIfImgErrorHandler={setIfImgErrorHandler}\r\n\r\n            profileChanged={profileChanged}\r\n        />\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './PwdRestore.module.css';\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    restorePress: () => void\r\n}\r\n\r\nexport function PwdRestore(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.titleProgressError}>\r\n                <h1>Restore Password</h1>\r\n                {\r\n                    props.isBusy &&\r\n                    <div>\r\n                        <Loader/>\r\n                    </div>\r\n                }\r\n                {\r\n                    props.error &&\r\n                    <div className={s.error}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.restorePress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Restore\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\nimport {setAppBusyAC, setAppErrorAC} from './appReducer';\nimport {authAPI} from '../dal/auth-api';\n\nconst initialState = {\n    isRestoring: false,\n}\n\ntype StateType = typeof initialState\n\n\nexport function passwordRestoreReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'PWD-RESTORE/SET-RESTORING':\n            return {\n                ...state,\n                isRestoring: action.value,\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const setIsRestoringAC = (value: boolean) => ({type: 'PWD-RESTORE/SET-RESTORING', value} as const)\n\n\nexport const pwdRestoreTC = (email: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.pwdRestore(email)\n        .then(response => {\n            dispatch(setIsRestoringAC(true))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n\ntype ActionType =\n    | ReturnType<typeof setIsRestoringAC>\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './PwdRestore.module.css';\r\nimport {PwdRestore} from './PwdRestore';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {pwdRestoreTC, setIsRestoringAC} from '../../../bll/passwordRestoreReducer';\r\n\r\n\r\nexport function PwdRestoreContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const isRestoring = useSelector<AppRootStateType, boolean>(state => state.passwordRestore.isRestoring)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n            dispatch(setIsRestoringAC(false))\r\n        }\r\n    }, [])\r\n\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@yandex.ru')\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@mail.ru')\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const restorePress = () => {\r\n        if (email === '') {\r\n            dispatch(setAppErrorAC('Fill email field!'))\r\n            return\r\n        }\r\n\r\n        dispatch(pwdRestoreTC(email))\r\n    }\r\n\r\n\r\n    if (isRestoring) {\r\n        return (\r\n            <div className={s.form}>\r\n                Check your e-mail <b>{email}</b> for Restore Password link!\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <PwdRestore\r\n                email={email}\r\n                isBusy={isBusy}\r\n                error={error}\r\n                emailChange={emailChange}\r\n                restorePress={restorePress}\r\n            />\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, MouseEvent} from 'react';\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\nimport s from './Login.module.css'\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    rememberMeChange: (e: MouseEvent<HTMLInputElement>) => void\r\n    loginPress: () => void\r\n    loginAsIgnatPress: () => void\r\n}\r\n\r\nexport function Login(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.titleProgressError}>\r\n                <h1>Login</h1>\r\n                {\r\n                    props.isBusy &&\r\n                    <div>\r\n                        <Loader/>\r\n                    </div>\r\n                }\r\n                {\r\n                    props.error &&\r\n                    <div className={s.error}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperInputText\r\n                        type={'checkbox'}\r\n                        checked={props.rememberMe}\r\n                        onClick={props.rememberMeChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.loginPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Login\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {/*======================================================*/}\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={'nya-admin@nya.nya'}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={'1qazxcvBG'}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperInputText\r\n                        type={'checkbox'}\r\n                        checked={false}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.loginAsIgnatPress}\r\n                        disabled={props.isBusy}\r\n                        red\r\n                    >\r\n                        Login as Ignat\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {/*======================================================*/}\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\nimport {authAPI} from '../dal/auth-api';\nimport {setAppBusyAC, setAppErrorAC, setUserDataAC} from './appReducer';\n\nconst initialState = {\n}\ntype StateType = typeof initialState\n\n\nexport function loginReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.login(email,password,rememberMe)\n        .then(response => {\n            dispatch(setUserDataAC(response.data))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\ntype ActionType = any\n","import React, {ChangeEvent, MouseEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {Login} from './Login';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {loginTC} from '../../../bll/loginReducer';\r\n\r\nexport function LoginContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@yandex.ru')\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@mail.ru')\r\n    const [password, setPassword] = useState<string>('11111111')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const rememberMeChange = (e: MouseEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const loginPress = () => {\r\n        if (email === '' || password === '') {\r\n            dispatch(setAppErrorAC('Fill email/password fields!'))\r\n            return\r\n        }\r\n\r\n        dispatch(loginTC(email, password, rememberMe))\r\n    }\r\n\r\n    const loginAsIgnatPress = () => {\r\n        dispatch(loginTC('nya-admin@nya.nya', '1qazxcvBG', false))\r\n    }\r\n\r\n\r\n    if (isLogined) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Login\r\n                isBusy={isBusy}\r\n                email={email}\r\n                password={password}\r\n                rememberMe={rememberMe}\r\n                emailChange={emailChange}\r\n                passwordChange={passwordChange}\r\n                rememberMeChange={rememberMeChange}\r\n                loginPress={loginPress}\r\n                loginAsIgnatPress={loginAsIgnatPress}\r\n                error={error}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './Register.module.css'\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport { Loader } from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    password: string\r\n    password2: string\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    password2Change: (e: ChangeEvent<HTMLInputElement>) => void\r\n    registerPress: () => void\r\n}\r\n\r\nexport function Register(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.titleProgressError}>\r\n                <h1>Register</h1>\r\n                {\r\n                    props.isBusy &&\r\n                    <div>\r\n                        <Loader/>\r\n                    </div>\r\n                }\r\n                {\r\n                    props.error &&\r\n                    <div className={s.error}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password (repeat)\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password2}\r\n                        onChange={props.password2Change}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.registerPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Register\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import { Dispatch } from \"redux\"\nimport {setAppBusyAC, setAppErrorAC} from './appReducer';\nimport {authAPI} from '../dal/auth-api';\n\nconst initialState = {\n    isRegistered: false,\n}\ntype StateType = typeof initialState\n\n\nexport function registerReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'REGISTER/SET-REGISTER':\n            return {\n                ...state,\n                isRegistered: action.value,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setRegisteredAC = (value: boolean) => ({type: 'REGISTER/SET-REGISTER', value} as const)\n\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.register(email, password)\n        .then(response => {\n            dispatch(setRegisteredAC(true))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\ntype ActionType =\n    | ReturnType<typeof setRegisteredAC>\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Register } from './Register';\r\nimport {registerTC, setRegisteredAC} from '../../../bll/registerReducer';\r\n\r\nexport function RegisterContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setRegisteredAC(false))\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    // const [email, setEmail] = useState<string>('')\r\n    // const [password1, setPassword1] = useState<string>('')\r\n    // const [password2, setPassword2] = useState<string>('')\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    // const [email, setEmail] = useState<string>('dfkcnsldkfj@yandex.ru')\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@mail.ru')\r\n    const [password, setPassword] = useState<string>('11111111')\r\n    const [password2, setPassword2] = useState<string>('11111111')\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const password2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const registerPress = () => {\r\n        if (email === '' || password === '' || password2 === '') {\r\n            dispatch(setAppErrorAC('Fill all fields!'))\r\n            return\r\n        }\r\n\r\n        if (password !== password2) {\r\n            dispatch(setAppErrorAC('Passwords do not match!'))\r\n            return\r\n        }\r\n\r\n        dispatch(registerTC(email, password))\r\n    }\r\n\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Register\r\n            isBusy={isBusy}\r\n            email={email}\r\n            password={password}\r\n            password2={password2}\r\n            emailChange={emailChange}\r\n            passwordChange={passwordChange}\r\n            password2Change={password2Change}\r\n            registerPress={registerPress}\r\n            error={error}\r\n        />\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './PwdNew.module.css';\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    password: string\r\n    password2: string\r\n    error: string\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    password2Change: (e: ChangeEvent<HTMLInputElement>) => void\r\n    newPress: () => void\r\n}\r\n\r\nexport function PwdNew(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.titleProgressError}>\r\n                <h1>New password</h1>\r\n                {\r\n                    props.isBusy &&\r\n                    <div>\r\n                        <Loader/>\r\n                    </div>\r\n                }\r\n                {\r\n                    props.error &&\r\n                    <div className={s.error}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    New password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    New password (repeat)\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password2}\r\n                        onChange={props.password2Change}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.newPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Set new password\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\nimport {setAppBusyAC, setAppErrorAC} from './appReducer';\nimport {authAPI} from '../dal/auth-api';\n\nconst initialState = {\n    isPwdNew: false\n}\n\ntype StateType = typeof initialState\n\n\nexport function passwordNewReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'PWD-NEW/SET-PWD-NEW':\n            return {\n                ...state,\n                isPwdNew: action.value,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setPwdNewAC = (value: boolean) => ({type: 'PWD-NEW/SET-PWD-NEW', value} as const)\n\n\nexport const pwdNewTC = (password: string, token: string) => (dispatch: Dispatch) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n    authAPI.pwdNew(password, token)\n        .then(response => {\n            dispatch(setPwdNewAC(true))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n\ntype ActionType =\n    | ReturnType<typeof setPwdNewAC>\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './PwdNew.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {PwdNew} from './PwdNew';\r\nimport {pwdNewTC, setPwdNewAC} from '../../../bll/passwordNewReducer';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport function PwdNewContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const isPwdNew = useSelector<AppRootStateType, boolean>(state => state.passwordNew.isPwdNew)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n\r\n    const {token} = useParams<{token: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setPwdNewAC(false))\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    const [password, setPassword] = useState<string>('22222222')\r\n    const [password2, setPassword2] = useState<string>('22222222')\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const password2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setAppErrorAC(''))\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const newPress = () => {\r\n        if (password === '' || password2 === '') {\r\n            dispatch(setAppErrorAC('Fill all fields!'))\r\n            return\r\n        }\r\n\r\n        if (password !== password2) {\r\n            dispatch(setAppErrorAC('Passwords do not match!'))\r\n            return\r\n        }\r\n\r\n        dispatch(pwdNewTC(password, token))\r\n    }\r\n\r\n\r\n    if (isPwdNew) {\r\n        return (\r\n            <div className={s.form}>\r\n                <h2><b>Password changed!</b></h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <PwdNew\r\n            isBusy={isBusy}\r\n            password={password}\r\n            password2={password2}\r\n            passwordChange={passwordChange}\r\n            password2Change={password2Change}\r\n            newPress={newPress}\r\n            error={error}\r\n        />\r\n    )\r\n}","import React, {ReactNode} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './TableLinePack.module.css';\r\n\r\n\r\ntype PropsType = {\r\n    head: boolean\r\n    nameFieldName: string\r\n    nameFieldLink: string\r\n    nameFieldButtons: ReactNode[]\r\n    cardsCountField: string\r\n    cardsCountFieldButtons: ReactNode[]\r\n    updatedField: string\r\n    updatedFieldButtons: ReactNode[]\r\n    buttonsFieldName: string\r\n    buttonsFieldButtons: ReactNode[]\r\n\r\n}\r\n\r\nexport function TableLinePack(props: PropsType) {\r\n    let tableStyle: { [key: string]: string } = {\r\n        borderWidth: '1px',\r\n        borderStyle: 'solid',\r\n        borderColor: 'black',\r\n        width: '100%',\r\n    }\r\n    let cellStyle: { [key: string]: string } = {\r\n        padding: '3px',\r\n        textAlign: 'center',\r\n        wordBreak: 'break-word',\r\n    }\r\n\r\n    if (props.head) {\r\n        tableStyle = {...tableStyle, borderWidth: '2px'}\r\n        cellStyle = {...cellStyle, padding: '10px'}\r\n    }\r\n\r\n    return (\r\n        <table style={tableStyle}>\r\n            <tr>\r\n                <td width={'55%'} style={{...cellStyle, textAlign: props.head ? 'center' : 'left'}}>\r\n                    {props.head && props.nameFieldName}\r\n                    {props.head && props.nameFieldButtons}\r\n                    {!props.head && <NavLink to={'cards/' + props.nameFieldLink}>{props.nameFieldName}</NavLink>}\r\n                </td>\r\n                <td width={'15%'} style={cellStyle}>\r\n                    {props.cardsCountField}\r\n                    {props.head && props.cardsCountFieldButtons}\r\n                </td>\r\n                <td width={'15%'} style={cellStyle}>\r\n                    {props.updatedField}\r\n                    {props.head && props.updatedFieldButtons}\r\n                </td>\r\n                <td width={'15%'} style={cellStyle}>\r\n                    {props.buttonsFieldName}\r\n                    {props.buttonsFieldButtons}\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    )\r\n}","import {instance} from './instance';\r\n\r\nexport const packsAPI = {\r\n    getPacks(data: PacksRequestType) {\r\n        return instance.get<GetPacksResponseType>('cards/pack', {params: data})\r\n    },\r\n\r\n    addPack(newPack: NewPackType) {\r\n        return instance.post<AddPackResponseType>('cards/pack', {cardsPack: newPack})\r\n    },\r\n\r\n    delPack(id: string) {\r\n        return instance.delete<DelPackResponseType>('cards/pack?id=' + id)\r\n    },\r\n\r\n    updatePack(updatePack: UpdatePackType) {\r\n        return instance.put<UpdatePackResponseType>('cards/pack', {cardsPack: updatePack})\r\n    },\r\n\r\n}\r\n\r\nexport type UpdatePackResponseType = {\r\n    updatedCardsPack: PackType\r\n}\r\n\r\nexport type UpdatePackType = NewPackType & {\r\n    _id: string\r\n}\r\n\r\n\r\nexport type DelPackResponseType = {\r\n    deletedCardsPack: PackType\r\n}\r\n\r\n\r\nexport type AddPackResponseType = {\r\n    newCardsPack: PackType\r\n}\r\n\r\nexport type NewPackType = {\r\n    name?: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    deckCover?: string\r\n    private?: boolean\r\n    type?: string\r\n}\r\n\r\n\r\nexport type PacksRequestType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}\r\n\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    cardsCount: number\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\n\r\nexport type GetPacksResponseType = {\r\n    cardPacks: PackType[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}","import {Dispatch} from 'redux';\nimport {setAppLoginAC, setAppBusyAC, setAppErrorAC} from './appReducer';\nimport {GetPacksResponseType, packsAPI, PacksRequestType} from '../dal/packs-api';\nimport {AppRootStateType} from './store';\n\nconst initialState = {\n    requestPacksData: {\n        packName: '',\n        min: 0,\n        max: 0,\n        sortPacks: '',\n        page: 1,\n        pageCount: 10,\n        user_id: '',\n    } as PacksRequestType,\n\n    packsData: {} as GetPacksResponseType,\n}\ntype StateType = typeof initialState\n\n\nexport function packsReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'PACKS/SET-PACKS-DATA':\n            return {\n                ...state,\n                packsData: {...action.packsData},\n\n            }\n\n        case 'PACKS/SET-PACKS-PER-PAGE':\n            return {\n                ...state,\n                requestPacksData: {\n                    ...state.requestPacksData,\n                    pageCount: action.packsCount,\n                },\n            }\n\n        case 'PACKS/SET-MY-PACKS-CHECKBOX':\n            return {\n                ...state,\n                requestPacksData: {\n                    ...state.requestPacksData,\n                    user_id: action.id,\n                }\n            }\n\n        case 'APP/SET-LOGIN':\n            if (!action.value) {\n                return {\n                    ...state,\n                    requestPacksData: {\n                        ...state.requestPacksData,\n                        user_id: '',\n                    }\n                }\n            }\n            return state\n\n        case 'PACKS/SET-CURRENT-PAGE':\n            return {\n                ...state,\n                requestPacksData: {\n                    ...state.requestPacksData,\n                    page: action.pageNumber,\n                }\n            }\n\n        case 'PACKS/SET-NAME-SEARCH':\n            return {\n                ...state,\n                requestPacksData: {\n                    ...state.requestPacksData,\n                    packName: action.text,\n                }\n            }\n\n        case 'PACKS/SET-RANGE-SEARCH':\n            return {\n                ...state,\n                requestPacksData: {\n                    ...state.requestPacksData,\n                    min: action.min,\n                    max: action.max,\n                }\n            }\n\n        case 'PACKS/SET-SORT-PACKS':\n            return {\n                ...state,\n                requestPacksData: {\n                    ...state.requestPacksData,\n                    sortPacks: action.sortString,\n                }\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const setPacksDataAC = (packsData: GetPacksResponseType) => ({type: 'PACKS/SET-PACKS-DATA', packsData} as const)\nexport const setPacksPerPageAC = (packsCount: number) => ({type: 'PACKS/SET-PACKS-PER-PAGE', packsCount} as const)\nexport const setMyPacksCheckBoxAC = (id: string) => ({type: 'PACKS/SET-MY-PACKS-CHECKBOX', id} as const)\nexport const setCurrentPackPageAC = (pageNumber: number) => ({type: 'PACKS/SET-CURRENT-PAGE', pageNumber} as const)\nexport const setPackNameSearchAC = (text: string) => ({type: 'PACKS/SET-NAME-SEARCH', text} as const)\nexport const setRangeSearchAC = (min: number, max: number) => ({type: 'PACKS/SET-RANGE-SEARCH', min, max} as const)\nexport const setSortPacksAC = (sortString: string) => ({type: 'PACKS/SET-SORT-PACKS', sortString} as const)\n\nexport const getPacksTC = () => (dispatch: Dispatch, getState: () => AppRootStateType) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n\n    const requestPacksData = getState().packs.requestPacksData\n    packsAPI.getPacks(requestPacksData)\n        .then(response => {\n            dispatch(setPacksDataAC(response.data))\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n// export const addPackTC = () => (dispatch: Dispatch) => {\nexport const addPackTC = () => (dispatch: Dispatch<any>) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n\n    packsAPI.addPack({name: 'SuperPuperName'})\n        .then(response => {\n            dispatch(getPacksTC())\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n// export const delPackTC = () => (dispatch: Dispatch) => {\nexport const delPackTC = (id: string) => (dispatch: Dispatch<any>) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n\n    packsAPI.delPack(id)\n        .then(response => {\n            dispatch(getPacksTC())\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n           dispatch(setAppBusyAC(false))\n        })\n}\n\n// export const updatePackTC = () => (dispatch: Dispatch) => {\nexport const updatePackTC = (_id: string) => (dispatch: Dispatch<any>) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n\n    packsAPI.updatePack({_id, name: 'Updated SuperPuperName!'})\n        .then(response => {\n            dispatch(getPacksTC())\n\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n\ntype ActionType =\n    | ReturnType<typeof setAppLoginAC>\n\n    | ReturnType<typeof setPacksDataAC>\n    | ReturnType<typeof setPacksPerPageAC>\n    | ReturnType<typeof setMyPacksCheckBoxAC>\n    | ReturnType<typeof setCurrentPackPageAC>\n    | ReturnType<typeof setPackNameSearchAC>\n    | ReturnType<typeof setRangeSearchAC>\n    | ReturnType<typeof setSortPacksAC>","import {instance} from './instance';\r\n\r\nexport const cardsAPI = {\r\n    getCards(data: CardsRequestType) {\r\n        return instance.get<GetCardsResponseType>('cards/card', {params: data})\r\n    },\r\n\r\n    addCard(newCard: NewCardType) {\r\n        return instance.post<AddCardResponseType>('cards/card', {card: newCard})\r\n    },\r\n\r\n    delCard(id: string) {\r\n        return instance.delete<DelCardResponseType>('cards/card?id=' + id)\r\n    },\r\n\r\n    updateCard(updateCard: UpdateCardType) {\r\n        return instance.put<UpdateCardResponseType>('cards/card', {card: updateCard})\r\n    },\r\n}\r\n\r\n\r\n\r\nexport type UpdateCardResponseType = {\r\n    updatedCard: CardType\r\n}\r\n\r\nexport type UpdateCardType = NewCardType & {\r\n    comments?: string\r\n}\r\n\r\n\r\nexport type DelCardResponseType = {\r\n    deletedCard: CardType\r\n}\r\n\r\n\r\nexport type AddCardResponseType = {\r\n    newCard: CardType\r\n}\r\n\r\nexport type NewCardType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    answerImg?: string\r\n    questionImg?: string\r\n    questionVideo?: string\r\n    answerVideo?: string\r\n    type?: string\r\n}\r\n\r\n\r\nexport type CardsRequestType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n}\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}","import {Dispatch} from 'redux';\nimport {cardsAPI, CardsRequestType, GetCardsResponseType} from '../dal/cards-api';\nimport {AppRootStateType} from './store';\nimport {setAppBusyAC, setAppErrorAC} from './appReducer';\n\nconst initRequestCardsData = {\n    cardAnswer: '',\n    cardQuestion: '',\n    cardsPack_id: '',\n    min: 0,\n    max: 0,\n    sortCards: '',\n    page: 1,\n    pageCount: 5,\n}\n\nconst initialState = {\n    requestCardsData: initRequestCardsData as CardsRequestType,\n    cardsData: {} as GetCardsResponseType,\n}\ntype StateType = typeof initialState\n\n\nexport function cardsReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'CARDS/SET-CARDS-DATA':\n            return {\n                ...state,\n                cardsData: {...action.cardsData},\n            }\n\n        case 'CARDS/SET-INIT-CARDS-DATA':\n            return {\n                ...state,\n                requestCardsData: initRequestCardsData,\n                cardsData: {} as GetCardsResponseType,\n            }\n\n        case 'CARDS/SET-CARDS-PER-PAGE':\n            return {\n                ...state,\n                requestCardsData: {\n                    ...state.requestCardsData,\n                    pageCount: action.cardsCount,\n                },\n            }\n\n        case 'CARDS/SET-CURRENT-PAGE':\n            return {\n                ...state,\n                requestCardsData: {\n                    ...state.requestCardsData,\n                    page: action.pageNumber,\n                }\n            }\n\n        case 'CARDS/SET-QUESTION-SEARCH':\n            return {\n                ...state,\n                requestCardsData: {\n                    ...state.requestCardsData,\n                    cardQuestion: action.text,\n                }\n            }\n\n        case 'CARDS/SET-ANSWER-SEARCH':\n            return {\n                ...state,\n                requestCardsData: {\n                    ...state.requestCardsData,\n                    cardAnswer: action.text,\n                }\n            }\n\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const setCardsDataAC = (cardsData: GetCardsResponseType) => ({type: 'CARDS/SET-CARDS-DATA', cardsData} as const)\nexport const setInitCardsDataAC = () => ({type: 'CARDS/SET-INIT-CARDS-DATA'} as const)\nexport const setCardsPerPageAC = (cardsCount: number) => ({type: 'CARDS/SET-CARDS-PER-PAGE', cardsCount} as const)\nexport const setCurrentCardPageAC = (pageNumber: number) => ({type: 'CARDS/SET-CURRENT-PAGE', pageNumber} as const)\nexport const setCardQuestionSearchAC = (text: string) => ({type: 'CARDS/SET-QUESTION-SEARCH', text} as const)\nexport const setCardAnswerSearchAC = (text: string) => ({type: 'CARDS/SET-ANSWER-SEARCH', text} as const)\n\n\nexport const getCardsTC = (cardsPack_id: string) => (dispatch: Dispatch, getState: () => AppRootStateType) => {\n    dispatch(setAppErrorAC(''))\n    dispatch(setAppBusyAC(true))\n\n    const requestCardsData = getState().cards.requestCardsData\n    cardsAPI.getCards({...requestCardsData, cardsPack_id})\n        .then(response => {\n            dispatch(setCardsDataAC(response.data))\n\n        })\n        .catch(error => {\n            dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\n        })\n        .finally(() => {\n            dispatch(setAppBusyAC(false))\n        })\n}\n\n\ntype ActionType =\n    | ReturnType<typeof setCardsDataAC>\n    | ReturnType<typeof setInitCardsDataAC>\n    | ReturnType<typeof setCardsPerPageAC>\n    | ReturnType<typeof setCurrentCardPageAC>\n    | ReturnType<typeof setCardQuestionSearchAC>\n    | ReturnType<typeof setCardAnswerSearchAC>","import React from 'react';\r\nimport s from './PerPage.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {setPacksPerPageAC} from '../../bll/packsReducer';\r\nimport {setCardsPerPageAC} from '../../bll/cardsReducer';\r\n\r\nconst perPageArr = [5, 10, 15, 20]\r\n\r\ntype PropsType = {\r\n    packs: boolean\r\n    nameText: string\r\n}\r\n\r\nexport function PerPage(props: PropsType) {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const packsCount = useSelector<AppRootStateType, number | undefined>(state => state.packs.requestPacksData.pageCount) || perPageArr[1]\r\n    const cardsCount = useSelector<AppRootStateType, number | undefined>(state => state.cards.requestCardsData.pageCount) || perPageArr[0]\r\n    const dispatch = useDispatch()\r\n\r\n    const activeCount = props.packs ? packsCount : cardsCount\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            <div className={s.itemText}>{props.nameText}</div>\r\n            {perPageArr.map(p =>\r\n                <div\r\n                    className={s.item + ' ' + (p === activeCount ? s.itemActive : '')}\r\n                    onClick={() => {\r\n                        if (!isBusy && p !== activeCount) {\r\n                            props.packs\r\n                                ? dispatch(setPacksPerPageAC(p))\r\n                                : dispatch(setCardsPerPageAC(p))\r\n                        }\r\n                    }}\r\n                >\r\n                    {p}\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from 'react';\r\nimport s from './MyPacksCheckBox.module.css'\r\nimport SuperCheckbox from '../c1-common/c3-SuperCheckbox/SuperCheckbox';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {setMyPacksCheckBoxAC} from '../../bll/packsReducer';\r\n\r\n\r\nexport function MyPacksCheckBox() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const id = useSelector<AppRootStateType, string>(state => state.app.userData._id)\r\n    const requestUserId = useSelector<AppRootStateType, string | undefined>(state => state.packs.requestPacksData.user_id) || ''\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            My packs\r\n            <SuperCheckbox\r\n                checked={!!requestUserId}\r\n                onClick={\r\n                    (e) =>\r\n                        dispatch(setMyPacksCheckBoxAC(e.currentTarget.checked ? id: ''))\r\n                }\r\n                disabled={isBusy}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Paginator.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport SuperButton from '../c1-common/c2-SuperButton/SuperButton';\r\nimport {setCurrentPackPageAC} from '../../bll/packsReducer';\r\nimport {setCurrentCardPageAC} from '../../bll/cardsReducer';\r\n\r\nconst pageButtons = ['|<', '<<', '<', '>', '>>', '>|']\r\nconst pageButtonsTitle = ['First', '-10', 'Previous', 'Next', '+10', 'Last']\r\n\r\ntype PropsType = {\r\n    packs: boolean\r\n}\r\n\r\nexport function Paginator(props: PropsType) {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const packsTotalCount = useSelector<AppRootStateType, number>(state => state.packs.packsData.cardPacksTotalCount)\r\n    const packsPerPage = useSelector<AppRootStateType, number>(state => state.packs.packsData.pageCount)\r\n    const packsCurrentPage = useSelector<AppRootStateType, number>(state => state.packs.packsData.page)\r\n    const cardsTotalCount = useSelector<AppRootStateType, number>(state => state.cards.cardsData.cardsTotalCount)\r\n    const cardsPerPage = useSelector<AppRootStateType, number>(state => state.cards.cardsData.pageCount)\r\n    const cardsCurrentPage = useSelector<AppRootStateType, number>(state => state.cards.cardsData.page)\r\n    const dispatch = useDispatch()\r\n\r\n    const totalPages = props.packs\r\n        ? Math.ceil(packsTotalCount / packsPerPage)\r\n        : Math.ceil(cardsTotalCount / cardsPerPage)\r\n\r\n    const currentPage = props.packs\r\n        ? packsCurrentPage\r\n        : cardsCurrentPage\r\n\r\n    const setCurrentFunction = props.packs\r\n        ? setCurrentPackPageAC\r\n        : setCurrentCardPageAC\r\n\r\n    const pageFunctions = [\r\n        setCurrentFunction(1),\r\n        setCurrentFunction(currentPage - 10),\r\n        setCurrentFunction(currentPage - 1),\r\n        setCurrentFunction(currentPage + 1),\r\n        setCurrentFunction(currentPage + 10),\r\n        setCurrentFunction(totalPages),\r\n    ]\r\n\r\n    const pageDisables = [\r\n        function () {\r\n            return currentPage === 1\r\n        },\r\n        function () {\r\n            return currentPage < 10\r\n        },\r\n        function () {\r\n            return currentPage === 1\r\n        },\r\n        function () {\r\n            return currentPage === totalPages\r\n        },\r\n        function () {\r\n            return currentPage > totalPages - 10\r\n        },\r\n        function () {\r\n            return currentPage === totalPages\r\n        },\r\n    ]\r\n\r\n    if (currentPage && totalPages) {\r\n        return (\r\n            <div className={s.form}>\r\n                Page: {currentPage} of {totalPages}\r\n                &nbsp;\r\n                {\r\n                    pageButtons.map((b, i) =>\r\n                        <SuperButton\r\n                            title={pageButtonsTitle[i]}\r\n                            onClick={() => dispatch(pageFunctions[i])}\r\n                            disabled={isBusy || pageDisables[i]()}\r\n                        >\r\n                            {b}\r\n                        </SuperButton>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <></>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport s from './FieldSearch.module.css';\r\nimport SuperInputText from '../c1-common/c1-SuperInputText/SuperInputText';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {setPackNameSearchAC} from '../../bll/packsReducer';\r\nimport {setCardAnswerSearchAC, setCardQuestionSearchAC} from '../../bll/cardsReducer';\r\n\r\ntype PropsType = {\r\n    searchField: 'PackName' | 'CardQuestion' | 'CardAnswer'\r\n    nameText: string\r\n}\r\n\r\nexport function FieldSearch(props: PropsType) {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const packName = useSelector<AppRootStateType, string | undefined>(state => state.packs.requestPacksData.packName) || ''\r\n    const cardQuestion = useSelector<AppRootStateType, string | undefined>(state => state.cards.requestCardsData.cardQuestion) || ''\r\n    const cardAnswer = useSelector<AppRootStateType, string | undefined>(state => state.cards.requestCardsData.cardAnswer) || ''\r\n    const dispatch = useDispatch()\r\n\r\n    const initText = props.searchField === 'PackName'\r\n        ? packName\r\n        : props.searchField === 'CardQuestion'\r\n            ? cardQuestion\r\n            : cardAnswer\r\n    const [search, setSearch] = useState<string>(initText)\r\n\r\n    useEffect(() => {\r\n        if (search !== initText) {\r\n            const timerId = setTimeout(() => {\r\n                if (props.searchField === 'PackName') {\r\n                    dispatch(setPackNameSearchAC(search))\r\n                } else if (props.searchField === 'CardQuestion') {\r\n                    dispatch(setCardQuestionSearchAC(search))\r\n                } else {\r\n                    dispatch(setCardAnswerSearchAC(search))\r\n                }\r\n            }, 1500)\r\n\r\n            return () => {\r\n                clearInterval(timerId)\r\n            }\r\n        }\r\n    }, [search])\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            {props.nameText} &nbsp;\r\n            <SuperInputText\r\n                value={search}\r\n                size={30}\r\n                onChange={(e) => setSearch(e.currentTarget.value)}\r\n                disabled={isBusy}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeRange,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                // style={{boxSizing: 'border-box', width: '200px', height: '20px'}}\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './DoubleRangeCardsCount.module.css'\r\nimport SuperRange from '../c1-common/c7-SuperRange/SuperRange';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../bll/store';\r\nimport {GetPacksResponseType} from '../../dal/packs-api';\r\nimport {setRangeSearchAC} from '../../bll/packsReducer';\r\n\r\nexport function DoubleRangeCardsCount() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const packsData = useSelector<AppRootStateType, GetPacksResponseType>(state => state.packs.packsData)\r\n    const {minCardsCount, maxCardsCount} = packsData\r\n    const minValue = useSelector<AppRootStateType, number | undefined>(state => state.packs.requestPacksData.min) || 0\r\n    let maxValue = useSelector<AppRootStateType, number | undefined>(state => state.packs.requestPacksData.max) || 0\r\n    const dispatch = useDispatch()\r\n\r\n    if (maxValue === 0) {\r\n        maxValue = maxCardsCount\r\n    }\r\n    const [minRangeValue, setMinRangeValue] = useState(minValue)\r\n    const [maxRangeValue, setMaxRangeValue] = useState(maxValue)\r\n\r\n    useEffect(() => {\r\n        if (minRangeValue !== minValue) {\r\n            setMinRangeValue(minValue)\r\n        }\r\n        if (maxRangeValue !== maxValue) {\r\n            setMaxRangeValue(maxValue)\r\n        }\r\n    }, [minValue, maxValue])\r\n\r\n    useEffect(() => {\r\n        /*\r\n                setMinRangeValue(minCardsCount)\r\n                setMaxRangeValue(maxCardsCount)\r\n                if (minCardsCount !== minValue || maxCardsCount > maxValue) {\r\n                    dispatch(setRangeSearchAC(minCardsCount, maxCardsCount))\r\n                }\r\n                */\r\n\r\n        let sortFlag = false\r\n        if (minRangeValue > maxCardsCount) {\r\n            setMinRangeValue(minCardsCount)\r\n            sortFlag = true\r\n        }\r\n        if (maxRangeValue > maxCardsCount) {\r\n            setMaxRangeValue(maxCardsCount)\r\n            sortFlag = true\r\n        }\r\n        if (sortFlag) {\r\n            dispatch(setRangeSearchAC(minCardsCount, maxCardsCount))\r\n        }\r\n    }, [minCardsCount, maxCardsCount])\r\n\r\n\r\n    const minRangeChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const min = +e.currentTarget.value\r\n        let max = maxRangeValue\r\n        if (min > max) {\r\n            max = min\r\n            setMaxRangeValue(max)\r\n        }\r\n        setMinRangeValue(min)\r\n    }\r\n\r\n    const maxRangeChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let min = minRangeValue\r\n        const max = +e.currentTarget.value\r\n        if (max < min) {\r\n            min = max\r\n            setMinRangeValue(min)\r\n        }\r\n        setMaxRangeValue(max)\r\n    }\r\n\r\n    const setNewRange = () => {\r\n        if (minValue !== minRangeValue || maxValue !== maxRangeValue) {\r\n            if (maxRangeValue === 0) {\r\n                setMaxRangeValue(maxCardsCount)\r\n            }\r\n            dispatch(setRangeSearchAC(minRangeValue, maxRangeValue))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            Cards count: &nbsp;\r\n            <b>{minCardsCount}</b>\r\n            <SuperRange\r\n                className={s.superRange}\r\n                min={minCardsCount}\r\n                max={maxCardsCount}\r\n                value={minRangeValue}\r\n                disabled={isBusy}\r\n                onChange={minRangeChange}\r\n                onMouseUp={setNewRange}\r\n            />\r\n            <span className={s.rangeValue}>{minRangeValue}</span>\r\n            {':'}\r\n            <span className={s.rangeValue}>{maxRangeValue}</span>\r\n            <SuperRange\r\n                className={s.superRange}\r\n                min={minCardsCount}\r\n                max={maxCardsCount}\r\n                value={maxRangeValue}\r\n                disabled={isBusy}\r\n                onChange={maxRangeChange}\r\n                onMouseUp={setNewRange}\r\n            />\r\n            <b>{maxCardsCount}</b>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Packs.module.css'\r\nimport {Loader} from '../../Loader/Loader';\r\nimport {GetPacksResponseType} from '../../../dal/packs-api';\r\nimport {TableLinePack} from '../../TableLinePack/TableLinePack';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {PerPage} from '../../PerPage/PerPage';\r\nimport {MyPacksCheckBox} from '../../MyPacksCheckBox/MyPacksCheckBox';\r\nimport {Paginator} from '../../Paginator/Paginator';\r\nimport {FieldSearch} from '../../FieldSearch/FieldSearch';\r\nimport {DoubleRangeCardsCount} from '../../DoubleRangeCardsCount/DoubleRangeCardsCount';\r\n\r\ntype PropsType = {\r\n    userId: string\r\n    packsData: GetPacksResponseType\r\n    isBusy: boolean\r\n    error: string\r\n    sortPress: (sortString: string) => void\r\n    sortName: string\r\n    addPress: () => void\r\n    delPress: (id: string) => void\r\n    updatePress: (id: string) => void\r\n}\r\n\r\nexport function Packs(props: PropsType) {\r\n    const sortButton = (sortParameter: string, buttonName: string, title: string) => {\r\n        return (\r\n            <SuperButton\r\n                className={s.buttonSort + ' ' + (sortParameter === props.sortName ? s.sortButtonActive : '')}\r\n                onClick={() => props.sortPress(sortParameter)}\r\n                title={title}\r\n                disabled={props.isBusy}\r\n            >\r\n                {buttonName}\r\n            </SuperButton>\r\n        )\r\n    }\r\n\r\n    const sortButtons = (sortParameter: string) => {\r\n        return [\r\n            // sortButton('1' + sortParameter, '?'),\r\n            // sortButton('0' + sortParameter, String.fromCharCode(191)),\r\n            sortButton('1' + sortParameter, '<', 'Ascending'),\r\n            sortButton('0' + sortParameter, '>', 'Descending'),\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.titleProgressError}>\r\n                <h1>Packs</h1>\r\n                {\r\n                    props.isBusy &&\r\n                    <div>\r\n                        <Loader/>\r\n                    </div>\r\n                }\r\n                {\r\n                    props.error &&\r\n                    <div className={s.error}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.form}>\r\n\r\n                <div className={s.headBlocks}>\r\n                    <div className={s.headBlockLeft}>\r\n                        <FieldSearch searchField={'PackName'} nameText={'Name search:'}/>\r\n                    </div>\r\n                    <div className={s.headBlockRight}>\r\n                        <DoubleRangeCardsCount/>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <TableLinePack\r\n                    head={true}\r\n                    nameFieldName={'Name'}\r\n                    nameFieldLink={''}\r\n                    nameFieldButtons={sortButtons('name')}\r\n                    cardsCountField={'Cards count'}\r\n                    cardsCountFieldButtons={sortButtons('cardsCount')}\r\n                    updatedField={'Updated'}\r\n                    updatedFieldButtons={sortButtons('updated')}\r\n                    buttonsFieldName={'Actions: '}\r\n                    buttonsFieldButtons={\r\n                        [\r\n                            <SuperButton\r\n                                onClick={props.addPress}\r\n                                disabled={props.isBusy}\r\n                            >Add</SuperButton>,\r\n                        ]\r\n                    }\r\n                />\r\n\r\n                {\r\n                    props.packsData.cardPacks &&\r\n                    props.packsData.cardPacks.map(c =>\r\n                        <TableLinePack\r\n                            key={c._id}\r\n                            head={false}\r\n                            nameFieldName={c.name}\r\n                            nameFieldLink={c._id}\r\n                            nameFieldButtons={[]}\r\n                            cardsCountField={'' + c.cardsCount}\r\n                            cardsCountFieldButtons={[]}\r\n                            updatedField={c.updated.substr(0, 10) + ' ' + c.updated.substr(11, 8)}\r\n                            updatedFieldButtons={[]}\r\n                            buttonsFieldName={''}\r\n                            buttonsFieldButtons={\r\n                                [\r\n                                    <SuperButton\r\n                                        className={s.buttonActions}\r\n                                        onClick={() => props.delPress(c._id)}\r\n                                        disabled={props.isBusy || c.user_id !== props.userId}\r\n                                    >Del</SuperButton>,\r\n                                    <SuperButton\r\n                                        className={s.buttonActions}\r\n                                        onClick={() => props.updatePress(c._id)}\r\n                                        disabled={props.isBusy || c.user_id !== props.userId}\r\n                                    >Update</SuperButton>,\r\n                                    <SuperButton\r\n                                        // onClick={}\r\n                                        disabled={props.isBusy}\r\n                                    >Learn</SuperButton>,\r\n                                ]\r\n                            }\r\n                        />\r\n                    )\r\n                }\r\n\r\n                <div className={s.footBlocks}>\r\n                    <div className={s.footBlockLeft}>\r\n                        <MyPacksCheckBox/>\r\n                        <PerPage packs={true} nameText={'Packs per page:'} />\r\n                    </div>\r\n                    <div className={s.footBlockRight}>\r\n                        <Paginator packs={true}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {Packs} from './Packs';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {addPackTC, delPackTC, getPacksTC, setSortPacksAC, updatePackTC} from '../../../bll/packsReducer';\r\nimport {GetPacksResponseType, PacksRequestType} from '../../../dal/packs-api';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport function PacksContainer() {\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.app.userData._id)\r\n    const requestPacksData = useSelector<AppRootStateType, PacksRequestType>(state => state.packs.requestPacksData)\r\n    const packsData = useSelector<AppRootStateType, GetPacksResponseType>(state => state.packs.packsData)\r\n\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (isLogined) {\r\n            dispatch(getPacksTC())\r\n        }\r\n\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n            // dispatch(setPacksDataAC({} as GetPacksResponseType))\r\n        }\r\n    }, [requestPacksData])\r\n\r\n    const sortPress = (sortString: string) => {\r\n        dispatch(setSortPacksAC(sortString))\r\n    }\r\n\r\n    const addPress = () => {\r\n        dispatch(addPackTC())\r\n    }\r\n\r\n    const delPress = (id: string) => {\r\n        dispatch(delPackTC(id))\r\n    }\r\n\r\n    const updatePress = (id: string) => {\r\n        dispatch(updatePackTC(id))\r\n    }\r\n\r\n    if (!isLogined) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Packs\r\n                userId={userId}\r\n                packsData={packsData}\r\n                isBusy={isBusy}\r\n                error={error}\r\n                sortPress={sortPress}\r\n                sortName={requestPacksData.sortPacks || ''}\r\n                addPress={addPress}\r\n                delPress={delPress}\r\n                updatePress={updatePress}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport s from './TableLineCard.module.css';\r\n\r\ntype PropsType = {\r\n    head: boolean\r\n    questionField: string\r\n    answerField: string\r\n    gradeField: string\r\n    updatedField: string\r\n    buttonsFieldName: string\r\n    buttonsFieldButtons: ReactNode[]\r\n}\r\n\r\nexport function TableLineCard(props: PropsType) {\r\n    let tableStyle: { [key: string]: string } = {\r\n        borderWidth: '1px',\r\n        borderStyle: 'solid',\r\n        borderColor: 'black',\r\n        width: '100%',\r\n    }\r\n    let cellStyle: { [key: string]: string } = {\r\n        padding: '3px',\r\n        textAlign: 'center',\r\n        wordBreak: 'break-word',\r\n    }\r\n\r\n    if (props.head) {\r\n        tableStyle = {...tableStyle, borderWidth: '2px'}\r\n        cellStyle = {...cellStyle, padding: '10px'}\r\n    }\r\n\r\n    return (\r\n        <table style={tableStyle}>\r\n            <tr>\r\n                <td width={'20%'} style={{...cellStyle, textAlign: props.head ? 'center' : 'left'}}>\r\n                    {props.questionField}\r\n                    {/*{props.head && props.questionFieldButtons}*/}\r\n                </td>\r\n                <td width={'35%'} style={{...cellStyle, textAlign: props.head ? 'center' : 'left'}}>\r\n                    {props.answerField}\r\n                    {/*{props.head && props.answerFieldButtons}*/}\r\n                </td>\r\n                <td width={'15%'} style={cellStyle}>\r\n                    {props.gradeField}\r\n                    {/*{props.head && props.gradeFieldButtons}*/}\r\n                </td>\r\n                <td width={'15%'} style={cellStyle}>\r\n                    {props.updatedField}\r\n                    {/*{props.head && props.updatedFieldButtons}*/}\r\n                </td>\r\n                <td width={'15%'} style={cellStyle}>\r\n                    {props.buttonsFieldName}\r\n                    {props.buttonsFieldButtons}\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Cards.module.css'\r\nimport {Loader} from '../../Loader/Loader';\r\nimport {GetCardsResponseType} from '../../../dal/cards-api';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {TableLineCard} from '../../TableLineCard/TableLineCard';\r\nimport {PerPage} from '../../PerPage/PerPage';\r\nimport {Paginator} from '../../Paginator/Paginator';\r\nimport {FieldSearch} from '../../FieldSearch/FieldSearch';\r\n\r\ntype PropsType = {\r\n    userId: string\r\n    cardsData: GetCardsResponseType\r\n    isBusy: boolean\r\n    error: string\r\n}\r\n\r\nexport function Cards(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.titleProgressError}>\r\n                <h1>Cards</h1>\r\n                {\r\n                    props.isBusy &&\r\n                    <div>\r\n                        <Loader/>\r\n                    </div>\r\n                }\r\n                {\r\n                    props.error &&\r\n                    <div className={s.error}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.form}>\r\n\r\n                <div className={s.headBlocks}>\r\n                    <div className={s.headBlockLeft}>\r\n                        <FieldSearch searchField={'CardQuestion'} nameText={'Question search:'}/>\r\n                        <FieldSearch searchField={'CardAnswer'} nameText={'Answer search:'}/>\r\n                    </div>\r\n                    <div className={s.headBlockRight}>\r\n                        {/*<DoubleRangeCardsCount/>*/}\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    props.cardsData.cards &&\r\n                    <TableLineCard\r\n                        head={true}\r\n                        questionField={'Question'}\r\n                        // questionFieldButtons={sortButtons('question')}\r\n                        answerField={'Answer'}\r\n                        // answerFieldButtons={sortButtons('answer')}\r\n                        gradeField={'Grade'}\r\n                        // gradeFieldButtons={sortButtons('grade')}\r\n                        updatedField={'Updated'}\r\n                        // updatedFieldButtons={sortButtons('updated')}\r\n                        buttonsFieldName={'Actions: '}\r\n                        buttonsFieldButtons={\r\n                            [\r\n                                <SuperButton\r\n                                    // onClick={props.addPress}\r\n                                    disabled={props.isBusy || props.cardsData.packUserId !== props.userId}\r\n                                >Add</SuperButton>,\r\n                            ]\r\n                        }\r\n                    />\r\n                }\r\n\r\n                {\r\n                    props.cardsData.cards &&\r\n                    props.cardsData.cards.map(c =>\r\n                        <TableLineCard\r\n                            key={c._id}\r\n                            head={false}\r\n                            questionField={c.question}\r\n                            // questionFieldButtons={sortButtons('question')}\r\n                            answerField={c.answer}\r\n                            // answerFieldButtons={sortButtons('answer')}\r\n                            gradeField={'' + c.grade}\r\n                            // gradeFieldButtons={sortButtons('grade')}\r\n                            updatedField={c.updated.substr(0, 10) + ' ' + c.updated.substr(11, 8)}\r\n                            // updatedFieldButtons={sortButtons('updated')}\r\n                            buttonsFieldName={''}\r\n                            buttonsFieldButtons={\r\n                                [\r\n                                    <SuperButton\r\n                                        className={s.buttonActions}\r\n                                        // onClick={() => props.delPress(c._id)}\r\n                                        disabled={props.isBusy || props.cardsData.packUserId !== props.userId}\r\n                                    >Del</SuperButton>,\r\n                                    <SuperButton\r\n                                        className={s.buttonActions}\r\n                                        // onClick={() => props.updatePress(c._id)}\r\n                                        disabled={props.isBusy || props.cardsData.packUserId !== props.userId}\r\n                                    >Update</SuperButton>,\r\n                                ]\r\n                            }\r\n                        />\r\n                    )\r\n                }\r\n\r\n                <div className={s.footBlocks}>\r\n                    <div className={s.footBlockLeft}>\r\n                        <PerPage packs={false} nameText={'Cards per page:'}/>\r\n                    </div>\r\n                    <div className={s.footBlockRight}>\r\n                        <Paginator packs={false}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport { Cards } from './Cards';\r\nimport {setAppErrorAC} from '../../../bll/appReducer';\r\nimport {getCardsTC} from '../../../bll/cardsReducer';\r\nimport {CardsRequestType, GetCardsResponseType} from '../../../dal/cards-api';\r\n\r\nexport function CardsContainer () {\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.app.userData._id)\r\n    const requestCardsData = useSelector<AppRootStateType, CardsRequestType>(state => state.cards.requestCardsData)\r\n    const cardsData = useSelector<AppRootStateType, GetCardsResponseType>(state => state.cards.cardsData)\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.app.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\r\n\r\n    const {cardsPackId} = useParams<{cardsPackId: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (isLogined) {\r\n            dispatch(getCardsTC(cardsPackId))\r\n        }\r\n\r\n        return () => {\r\n            dispatch(setAppErrorAC(''))\r\n        }\r\n    }, [requestCardsData])\r\n\r\n\r\n\r\n    if (!isLogined) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Cards\r\n                userId={userId}\r\n                cardsData={cardsData}\r\n                isBusy={isBusy}\r\n                error={error}\r\n            />\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Error404} from '../Error404/Error404';\r\nimport {ProfileContainer} from '../Profile/ProfileContainer';\r\nimport {PwdRestoreContainer} from '../PwdRestore/PwdRestoreContainer';\r\nimport {LoginContainer} from '../Login/LoginContainer';\r\nimport {RegisterContainer} from '../Register/RegisterContainer';\r\nimport {PwdNewContainer} from '../PwdNew/PwdNewContainer';\r\nimport {PacksContainer} from '../Packs/PacksContainer';\r\nimport {CardsContainer} from '../Cards/CardsContainer';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setInitCardsDataAC} from '../../../bll/cardsReducer';\r\n\r\n/*\r\nлогинизация\r\nрегистрация\r\nпрофайл\r\n404 (можно застилизовать заранее)\r\nвосстановление пароля\r\nввод нового пароля\r\nтестовая - отобразить/продемонстрировать все SuperКомпоненты\r\n */\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RESTORE: '/pwd-restore',\r\n    PASSWORD_NEW: '/pwd-new/:token',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards/:cardsPackId'\r\n}\r\n\r\n\r\nexport function Routes() {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <ProfileContainer/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <LoginContainer/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <RegisterContainer/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\r\n                <Route path={PATH.PASSWORD_RESTORE} render={() => <PwdRestoreContainer/>}/>\r\n                <Route path={PATH.PASSWORD_NEW} render={() => <PwdNewContainer/>}/>\r\n                <Route path={PATH.PACKS} render={() => <PacksContainer/>}/>\r\n\r\n                {/*<Route path={PATH.CARDS} render={() => <CardsContainer/>}/>*/}\r\n                <Route path={PATH.CARDS} render={() => {\r\n                    dispatch(setInitCardsDataAC())\r\n                    return <CardsContainer/>\r\n                }}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './SuperNavLink.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    goTo: string\r\n    text: string\r\n    padding?: string\r\n    margin?: string\r\n    border?: string\r\n}\r\n\r\nexport function SuperNavLink(props: PropsType) {\r\n    return (\r\n        <NavLink\r\n            className={s.item}\r\n            to={props.goTo}\r\n            style={{\r\n                padding: `${props.padding || '5px'}`,\r\n                margin: `${props.margin || '5px'}`,\r\n                border: `${props.border || '1px solid green'}`,\r\n            }}\r\n        >\r\n            {props.text}\r\n        </NavLink>\r\n    )\r\n}","import React from 'react';\r\nimport {PATH} from '../c2-pages/Routes/Routes';\r\nimport {SuperNavLink} from '../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\ntype PropsType = {\r\n    isLogined: boolean\r\n    isRestoring: boolean\r\n}\r\n\r\nexport function Header({isLogined, isRestoring}: PropsType) {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center', color: 'red'}}>FRIDAY</h1>\r\n\r\n            {!isLogined && <SuperNavLink goTo={PATH.LOGIN} text={'Login page'}/>}\r\n\r\n            {!isLogined && <SuperNavLink goTo={PATH.REGISTER} text={'Register page'}/>}\r\n\r\n            {isLogined && <SuperNavLink goTo={PATH.PROFILE} text={'Profile page'}/>}\r\n\r\n            {!isRestoring &&\r\n            <SuperNavLink goTo={PATH.PASSWORD_RESTORE} text={'Restore password page'} border={'1px solid blue'}/>}\r\n\r\n            {isLogined && <SuperNavLink goTo={PATH.PACKS} text={'Packs page'}/>}\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from './components/Header/Header';\r\nimport {Routes} from './components/c2-pages/Routes/Routes';\r\nimport {AppRootStateType} from './bll/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Loader} from './components/Loader/Loader';\r\nimport {initializeTC} from './bll/appReducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nexport function App() {\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.app.isLogined)\r\n    const isRestoring = useSelector<AppRootStateType, boolean>(state => state.passwordRestore.isRestoring)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeTC())\r\n    }, [])\r\n\r\n\r\n    if (!isInitialized) {\r\n        return (\r\n            <div className={'init'}>\r\n                <Loader/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header isLogined={isLogined} isRestoring={isRestoring}/>\r\n            <Routes/>\r\n            {/*<Redirect to={isLogined ? '/profile' : '/login'}/>*/}\r\n        </div>\r\n    )\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk';\nimport {loginReducer} from './loginReducer'\nimport {profileReducer} from './profileReducer'\nimport {registerReducer} from './registerReducer'\nimport {passwordNewReducer} from './passwordNewReducer';\nimport {passwordRestoreReducer} from './passwordRestoreReducer';\nimport {appReducer} from './appReducer';\nimport {packsReducer} from './packsReducer';\nimport {cardsReducer} from './cardsReducer';\n\nconst reducers = combineReducers({\n    app: appReducer,\n    login: loginReducer,\n    register: registerReducer,\n    profile: profileReducer,\n    passwordRestore: passwordRestoreReducer,\n    passwordNew: passwordNewReducer,\n    packs: packsReducer,\n    cards: cardsReducer,\n})\n\nconst store = createStore(reducers,applyMiddleware(thunkMiddleware))\n\nexport default store\n\nexport type AppRootStateType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {App} from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './bll/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}