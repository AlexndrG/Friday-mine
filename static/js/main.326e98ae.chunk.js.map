{"version":3,"sources":["components/c2-pages/Profile/Profile.module.css","components/c2-pages/Login/Login.module.css","components/c2-pages/Register/Register.module.css","components/c2-pages/Error404/Error404.module.css","components/c1-common/c1-SuperInputText/SuperInputText.module.css","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.module.css","components/c1-common/c2-SuperButton/SuperButton.module.css","components/c1-common/c3-SuperCheckbox/SuperCheckbox.module.css","components/ShowComponent/ShowComponent.module.css","components/Loader/Loader.module.css","components/c2-pages/Test/Test.module.css","components/c1-common/c7-SuperRange/SuperRange.module.css","components/c1-common/c91-SuperNavLink/SuperNavLink.module.css","components/c2-pages/Error404/Error404.tsx","components/c2-pages/Profile/avatar.jpg","components/c1-common/c2-SuperButton/SuperButton.tsx","components/Loader/loader.gif","components/Loader/Loader.tsx","components/c2-pages/Profile/Profile.tsx","dal/api-register.ts","dal/api-login.ts","bll/appReducer.ts","bll/loginReducer.ts","dal/api-profile.ts","bll/profileReducer.ts","components/c2-pages/Profile/ProfileContainer.tsx","components/c2-pages/PwdRestore/PwdRestore.tsx","components/c2-pages/PwdNew/PwdNew.tsx","bll/registerReducer.ts","components/c1-common/c1-SuperInputText/SuperInputText.tsx","components/c2-pages/Login/Login.tsx","components/c2-pages/Login/LoginContainer.tsx","components/c1-common/c3-SuperCheckbox/SuperCheckbox.tsx","components/c1-common/c4-SuperEditableSpan/SuperEditableSpan.tsx","components/c1-common/c5-SuperSelect/SuperSelect.tsx","components/c1-common/c6-SuperRadio/SuperRadio.tsx","components/c1-common/c7-SuperRange/SuperRange.tsx","components/ShowComponent/ShowComponent.tsx","components/c1-common/c91-SuperNavLink/SuperNavLink.tsx","components/c2-pages/Test/Test.tsx","components/c2-pages/Register/Register.tsx","components/c2-pages/Register/RegisterContainer.tsx","components/c2-pages/Routes/Routes.tsx","components/Header/Header.tsx","App.tsx","bll/passwordNewReducer.ts","bll/passwordRestoreReducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","error","text","image","src","alt","SuperButton","red","restProps","finalClassName","default","Loader","loader","loadingPicture","Profile","props","main","form","item","photo","userData","avatar","name","email","onClick","logoutPress","disabled","isBusy","instance","axios","create","baseURL","withCredentials","registerAPI","password","post","loginAPI","rememberMe","initialState","isLogined","setLoginIsBusyAC","type","setIsLoginedAC","setLoginErrorAC","errorText","profileAPI","delete","setProfileIsBusyAC","setProfileErrorAC","ProfileContainer","useSelector","state","login","profile","app","dispatch","useDispatch","useEffect","then","res","catch","err","response","data","message","finally","to","PwdRestore","PwdNew","isRegistered","setRegisterIsBusyAC","setIsRegisteredAC","setRegisterErrorAC","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Login","emailChange","passwordChange","checked","rememberMeChange","loginPress","LoginContainer","useState","setEmail","setPassword","setRememberMe","loginTC","SuperCheckbox","onChangeChecked","children","checkbox","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","pen","SuperSelect","options","onChangeOption","mappedOptions","map","op","i","SuperRadio","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","style","boxSizing","width","height","ShowComponent","h3","node","SuperNavLink","goTo","arr","Test","Register","password2","password2Change","registerPress","RegisterContainer","register","setPassword2","registerTC","PATH","Routes","path","exact","render","Header","textAlign","color","App","reducers","combineReducers","action","passwordNew","passwordRestore","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.326e98ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__1iK2v\",\"form\":\"Profile_form__2Irhk\",\"photo\":\"Profile_photo__1Mrgm\",\"item\":\"Profile_item__2s20o\",\"error\":\"Profile_error__aQEnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__2pv3y\",\"form\":\"Login_form__J68WB\",\"item\":\"Login_item__3yq4G\",\"error\":\"Login_error__3lSpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Register_main__iR9HC\",\"form\":\"Register_form__2bOF2\",\"item\":\"Register_item__1te8c\",\"error\":\"Register_error__3uYTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2seUt\",\"text\":\"Error404_text__3vJJY\",\"image\":\"Error404_image__2JRYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2AxW5\",\"errorInput\":\"SuperInputText_errorInput__20jP4\",\"error\":\"SuperInputText_error__rhMt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pen\":\"SuperEditableSpan_pen__37tAy\",\"spanParameter\":\"SuperEditableSpan_spanParameter__3KV6Z\",\"editableSpan\":\"SuperEditableSpan_editableSpan__2mEG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1A3oo\",\"red\":\"SuperButton_red__3CQpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__16WQn\",\"spanClassName\":\"SuperCheckbox_spanClassName__TOXu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ShowComponent_item__Cw_MG\",\"h3\":\"ShowComponent_h3__1wID5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2rfiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Test_main__OSXSW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__1Z1RV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SuperNavLink_item__sVmEG\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport function Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.text}>\r\n                404<br/>\r\n                Sorry...\r\n            </div>\r\n\r\n            <img className={s.image} src={'https://images-na.ssl-images-amazon.com/images/I/51yEw1u0HqL._AC_SY1000_.jpg'} alt={'turd'}/>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar.f463a804.jpg\";","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }) => {\r\n\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","export default __webpack_public_path__ + \"static/media/loader.b6485230.gif\";","import React from 'react';\r\nimport s from './Loader.module.css'\r\nimport loadingPicture from './loader.gif'\r\n\r\nexport function Loader() {\r\n    return <img className={s.loader} src={loadingPicture}/>\r\n}","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport avatar from './avatar.jpg'\r\nimport {LoginResponseType} from '../../../dal/api-login';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    error: string\r\n    userData: LoginResponseType\r\n    logoutPress: () => void\r\n}\r\n\r\nexport function Profile(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Profile</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <img\r\n                        className={s.photo}\r\n                        src={props.userData.avatar ? props.userData.avatar : avatar}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    {props.userData.name}\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    {props.userData.email}\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.logoutPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Logout\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\n// Test mode\r\n// const baseURL = 'http://localhost:7542/2.0/'\r\n// Normal mode\r\nconst baseURL = 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n})\r\n\r\n\r\nexport const registerAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>('auth/register', {email, password});\r\n    },\r\n}\r\n\r\ntype RegisterResponseType = {\r\n    error?: string\r\n}","import {instance} from './api-register';\r\n\r\nexport const loginAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe});\r\n    },\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // количество колод\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean            // подтвердил ли почту\r\n    rememberMe: boolean\r\n    error?: string\r\n}","import {LoginResponseType} from '../dal/api-login';\n\nconst initialState = {\n    userData: {} as LoginResponseType,\n}\n\ntype StateType = typeof initialState\n\nexport function appReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'APP/SET-USER-DATA':\n            return {\n                ...state,\n                userData: {...action.data},\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setUserDataAC = (data: LoginResponseType) => ({type: 'APP/SET-USER-DATA', data} as const)\n\ntype ActionType =\n    | ReturnType<typeof setUserDataAC>","import {Dispatch} from 'redux'\nimport {loginAPI} from '../dal/api-login';\nimport {setUserDataAC} from './appReducer';\n\nconst initialState = {\n    isBusy: false,\n    isLogined: false,\n    error: '',\n}\ntype StateType = typeof initialState\n\nexport function loginReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'LOGIN/SET-IS-BUSY':\n            return {\n                ...state,\n                isBusy: action.isBusy,\n            }\n\n        case 'LOGIN/SET-IS-LOGINED':\n            return {\n                ...state,\n                isLogined: action.isLogined,\n            }\n\n        case 'LOGIN/SET-ERROR':\n            return {\n                ...state,\n                error: action.errorText,\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const setLoginIsBusyAC = (isBusy: boolean) => ({type: 'LOGIN/SET-IS-BUSY', isBusy} as const)\nexport const setIsLoginedAC = (isLogined: boolean) => ({type: 'LOGIN/SET-IS-LOGINED', isLogined} as const)\nexport const setLoginErrorAC = (errorText: string) => ({type: 'LOGIN/SET-ERROR', errorText} as const)\n\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\n    dispatch(setLoginErrorAC(''))\n    dispatch(setLoginIsBusyAC(true))\n    loginAPI.login(email, password, rememberMe)\n        .then(res => {\n            dispatch(setIsLoginedAC(true))\n            dispatch(setUserDataAC(res.data))\n        })\n        .catch(err => {\n            dispatch(setLoginErrorAC(err.response.data.error))\n        })\n        .finally(() => {\n            dispatch(setLoginIsBusyAC(false))\n        })\n}\n\ntype ActionType =\n    | ReturnType<typeof setLoginIsBusyAC>\n    | ReturnType<typeof setIsLoginedAC>\n    | ReturnType<typeof setLoginErrorAC>\n","import {instance} from './api-register';\r\n\r\nexport const profileAPI = {\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>('auth/me');\r\n    },\r\n}\r\n\r\nexport type LogoutResponseType = {\r\n    info: string\r\n    error: string\r\n}","import {Dispatch} from 'redux';\nimport {setIsLoginedAC} from './loginReducer';\nimport {profileAPI} from '../dal/api-profile';\n\nconst initialState = {\n    isBusy: false,\n    error: '',\n}\n\ntype StateType = typeof initialState\n\nexport function profileReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'PROFILE/SET-IS-BUSY':\n            return {\n                ...state,\n                isBusy: action.isBusy,\n            }\n\n        case 'PROFILE/SET-ERROR':\n            return {\n                ...state,\n                error: action.errorText,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setProfileIsBusyAC = (isBusy: boolean) => ({type: 'PROFILE/SET-IS-BUSY', isBusy} as const)\nexport const setProfileErrorAC = (errorText: string) => ({type: 'PROFILE/SET-ERROR', errorText} as const)\n\nexport const logoutTC = () => (dispatch: Dispatch) => {\n    dispatch(setProfileIsBusyAC(true))\n    profileAPI.logout()\n        .then(res => {\n            dispatch(setIsLoginedAC(false))\n        })\n        .catch(err => {\n            dispatch(setProfileErrorAC(err.response ? err.response.data.error : err.message))\n        })\n        .finally(() => {\n            dispatch(setProfileIsBusyAC(false))\n        })\n}\n\ntype ActionType =\n    | ReturnType<typeof setProfileIsBusyAC>\n    | ReturnType<typeof setProfileErrorAC>\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Profile} from './Profile';\r\nimport {LoginResponseType} from '../../../dal/api-login';\r\nimport {logoutTC, setProfileErrorAC} from '../../../bll/profileReducer';\r\n\r\nexport function ProfileContainer() {\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.login.isLogined)\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.profile.isBusy)\r\n    const error = useSelector<AppRootStateType, string>(state => state.profile.error)\r\n    const userData = useSelector<AppRootStateType, LoginResponseType>(state => state.app.userData)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setProfileErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    const logoutPress = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n\r\n    if (!isLogined) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Profile\r\n            isBusy={isBusy}\r\n            error={error}\r\n            userData={userData}\r\n            logoutPress={logoutPress}\r\n        />\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PwdRestore() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Restore Password</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PwdNew() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>New Password</h1>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux'\nimport {registerAPI} from '../dal/api-register';\n\nconst initialState = {\n    isBusy: false,\n    isRegistered: false,\n    error: '',\n}\ntype StateType = typeof initialState\n\nexport function registerReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n        case 'REGISTER/SET-IS-BUSY':\n            return {\n                ...state,\n                isBusy: action.isBusy,\n            }\n\n        case 'REGISTER/SET-IS-REGISTERED':\n            return {\n                ...state,\n                isRegistered: action.isRegistered,\n            }\n\n        case 'REGISTER/SET-ERROR':\n            return {\n                ...state,\n                error: action.errorText,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const setRegisterIsBusyAC = (isBusy: boolean) => ({type: 'REGISTER/SET-IS-BUSY', isBusy} as const)\nexport const setIsRegisteredAC = (isRegistered: boolean) => ({type: 'REGISTER/SET-IS-REGISTERED', isRegistered} as const)\nexport const setRegisterErrorAC = (errorText: string) => ({type: 'REGISTER/SET-ERROR', errorText} as const)\n\n\nexport const registerTC = (email: string, password: string) => (dispatch: Dispatch) => {\n    dispatch(setRegisterErrorAC(''))\n    dispatch(setRegisterIsBusyAC(true))\n    registerAPI.register(email, password)\n        .then(res => {\n            // console.log('res: ',res.data)\n            // console.dir(res)\n            dispatch(setIsRegisteredAC(true))\n        })\n        .catch(err => {\n            // console.log('err: ',err.response.data)\n            // console.dir(err)\n            dispatch(setRegisterErrorAC(err.response.data.error))\n        })\n        .finally(() => {\n            dispatch(setRegisterIsBusyAC(false))\n        })\n}\n\ntype ActionType =\n    | ReturnType<typeof setRegisterIsBusyAC>\n    | ReturnType<typeof setIsRegisteredAC>\n    | ReturnType<typeof setRegisterErrorAC>\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, MouseEvent} from 'react';\r\nimport s from './Login.module.css'\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    rememberMeChange: (e: MouseEvent<HTMLInputElement>) => void\r\n    loginPress: () => void\r\n}\r\n\r\nexport function Login(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Login</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n\r\n                    <br/>\r\n                    <SuperInputText\r\n                        type={'checkbox'}\r\n                        checked={props.rememberMe}\r\n                        onClick={props.rememberMeChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                    Remember me\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.loginPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Login\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, MouseEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setRegisterErrorAC} from '../../../bll/registerReducer';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Login} from './Login';\r\nimport {loginTC, setLoginErrorAC} from '../../../bll/loginReducer';\r\n\r\nexport function LoginContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.login.isBusy)\r\n    const isLogined = useSelector<AppRootStateType, boolean>(state => state.login.isLogined)\r\n    const error = useSelector<AppRootStateType, string>(state => state.login.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setLoginErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    const [password, setPassword] = useState<string>('11111111')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setRegisterErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setRegisterErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const rememberMeChange = (e: MouseEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setRegisterErrorAC(''))\r\n        setRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const loginPress = () => {\r\n        if (email === '' && password === '') {\r\n            dispatch(setRegisterErrorAC('Fill email/password fields!'))\r\n            return\r\n        }\r\n\r\n        dispatch(loginTC(email, password, rememberMe))\r\n    }\r\n\r\n\r\n    if (isLogined) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <Login\r\n            isBusy={isBusy}\r\n            email={email}\r\n            password={password}\r\n            rememberMe={rememberMe}\r\n            emailChange={emailChange}\r\n            passwordChange={passwordChange}\r\n            rememberMeChange={rememberMeChange}\r\n            loginPress={loginPress}\r\n            error={error}\r\n        />\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\n\r\nimport s from './SuperEditableSpan.module.css'\r\nimport SuperInputText from '../c1-SuperInputText/SuperInputText';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n    // const spanClassName = `${s.editableSpan}`\r\n    const spanClassName =\r\n        `${s.editableSpan}\r\n         ${restProps.spanClassName ? s[restProps.spanClassName] : ''}\r\n         ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <div>\r\n                        <img\r\n                            className={s.pen}\r\n                            // src='https://cdn.shopify.com/s/files/1/0573/7352/4157/products/94.png'\r\n                            src='https://iconarchive.com/download/i96727/iconsmind/outline/Pen.ico'\r\n                            alt='pen'\r\n                        />\r\n\r\n                        <span\r\n                            onDoubleClick={onDoubleClickCallBack}\r\n                            className={spanClassName}\r\n\r\n                            {...restSpanProps}\r\n                        >\r\n                            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                            {children || restProps.value}\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChangeOption,\r\n        onChange,\r\n        ...restProps\r\n    }) => {\r\n\r\n    // map options with key\r\n    const mappedOptions: any[] =\r\n        options\r\n            ? options.map((op, i) =>\r\n                <option\r\n                    key={i}\r\n                    value={op}\r\n                    // selected={restProps.value === op}\r\n                >\r\n                    {op}\r\n                </option>)\r\n            : []\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type,\r\n        name,\r\n        value,\r\n        onChange,\r\n        options,\r\n        onChangeOption,\r\n        ...restProps\r\n    }) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n                name={name}\r\n                checked={value === o}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeRange,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                style={{boxSizing: 'border-box', width: '200px', height: '20px'}}\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React, {ReactNode} from 'react';\r\nimport s from './ShowComponent.module.css'\r\n\r\ntype PropsType = {\r\n    name: string\r\n    node: ReactNode\r\n}\r\n\r\nexport function ShowComponent(props: PropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <h3 className={s.h3}>{props.name}</h3>\r\n            </div>\r\n            {props.node}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './SuperNavLink.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    goTo: string\r\n    text: string\r\n}\r\n\r\nexport function SuperNavLink(props: PropsType) {\r\n    return (\r\n            <NavLink className={s.item} to={props.goTo}>{props.text}</NavLink>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Test.module.css'\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from '../../c1-common/c3-SuperCheckbox/SuperCheckbox';\r\nimport SuperEditableSpan from '../../c1-common/c4-SuperEditableSpan/SuperEditableSpan';\r\nimport SuperSelect from '../../c1-common/c5-SuperSelect/SuperSelect';\r\nimport SuperRadio from '../../c1-common/c6-SuperRadio/SuperRadio';\r\nimport SuperRange from '../../c1-common/c7-SuperRange/SuperRange';\r\nimport {ShowComponent} from '../../ShowComponent/ShowComponent';\r\nimport {SuperNavLink} from '../../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\nconst arr = ['Super', 'Select', 'SuperSelect']\r\n\r\nexport function Test() {\r\n    // const [value, onChangeOption] = useState(arr[2])\r\n    // const [value1Range, setValue1Range] = useState(25)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test</h1>\r\n\r\n            <div className={s.main}>\r\n                <ShowComponent name={'SuperInputText'} node={\r\n                    <SuperInputText\r\n                        value={'SuperInputText'}\r\n                        // onChangeText={setText}\r\n                        // onEnter={showAlert}\r\n                        // error={error}\r\n                        // spanClassName={s.testSpanError}\r\n                    />\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperButton'} node={\r\n                    <SuperButton>\r\n                        SuperButton\r\n                    </SuperButton>\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperCheckbox'} node={\r\n                    <SuperCheckbox\r\n                        // checked={checked}\r\n                        // onChangeChecked={setChecked}\r\n                    >\r\n                        SuperCheckbox\r\n                    </SuperCheckbox>\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperEditableSpan'} node={\r\n                    <SuperEditableSpan\r\n                        value={'SuperEditableSpan'}\r\n                        // onChangeText={setValue}\r\n                        // spanProps={{children: value ? undefined : 'enter text...'}}\r\n                        //\r\n                        // test props\r\n                        // onEnter={() => alert('Hello, onEnter!')}\r\n                        // onBlur={() => alert('Hello, onBlur!')}\r\n                        // spanClassName={'spanParameter'}\r\n                    />\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperSelect'} node={\r\n                    <SuperSelect\r\n                        value={'SuperSelect'}\r\n                        options={arr}\r\n                        // onChangeOption={onChangeOption}\r\n                        // onChange={() => alert('This is SELECT onChange')}\r\n                    />\r\n                }/>\r\n\r\n                <ShowComponent name={'SuperRadio'} node={\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={arr[2]}\r\n                        // value={value}\r\n                        // name={'radio'}\r\n                        // onChangeOption={onChangeOption}\r\n                        // onChange={() => alert('This is RADIO onChange')}\r\n                    />\r\n                }/>\r\n\r\n\r\n                <ShowComponent name={'SuperRange'} node={\r\n                    <SuperRange\r\n                        value={25}\r\n                        // value={value1Range}\r\n                        // onChangeRange={setStartRange}\r\n                    />\r\n                }/>\r\n\r\n                {/*<SuperDoubleRange/>*/}\r\n\r\n                <ShowComponent name={'SuperNavLink'} node={\r\n                    <SuperNavLink\r\n                        goTo={'/test'}\r\n                        text={'Go to Test page'}\r\n                    />\r\n                }/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './Register.module.css'\r\nimport SuperInputText from '../../c1-common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../c1-common/c2-SuperButton/SuperButton';\r\nimport {Loader} from '../../Loader/Loader';\r\n\r\ntype PropsType = {\r\n    isBusy: boolean\r\n    email: string\r\n    password: string\r\n    password2: string\r\n    error: string\r\n    emailChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    passwordChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    password2Change: (e: ChangeEvent<HTMLInputElement>) => void\r\n    registerPress: () => void\r\n}\r\n\r\nexport function Register(props: PropsType) {\r\n    return (\r\n        <div className={s.main}>\r\n            <h1>Register</h1>\r\n\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    E-mail\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    Password (repeat)\r\n                    <br/>\r\n                    <SuperInputText\r\n                        value={props.password2}\r\n                        onChange={props.password2Change}\r\n                        disabled={props.isBusy}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <br/>\r\n                    <SuperButton\r\n                        onClick={props.registerPress}\r\n                        disabled={props.isBusy}\r\n                    >\r\n                        Register\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n\r\n            {props.isBusy &&\r\n            <div>\r\n                <Loader/>\r\n            </div>}\r\n\r\n            {props.error &&\r\n            <div className={s.error}>\r\n                {props.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {Register} from './Register';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {registerTC, setRegisterErrorAC, setIsRegisteredAC} from '../../../bll/registerReducer';\r\nimport {AppRootStateType} from '../../../bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport function RegisterContainer() {\r\n    const isBusy = useSelector<AppRootStateType, boolean>(state => state.register.isBusy)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n    const error = useSelector<AppRootStateType, string>(state => state.register.error)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setIsRegisteredAC(false))\r\n            dispatch(setRegisterErrorAC(''))\r\n        }\r\n    }, [])\r\n\r\n    // const [email, setEmail] = useState<string>('')\r\n    // const [password1, setPassword1] = useState<string>('')\r\n    // const [password2, setPassword2] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('dfkcnsldkfj@sdfsifd.ru')\r\n    const [password, setPassword] = useState<string>('11111111')\r\n    const [password2, setPassword2] = useState<string>('11111111')\r\n\r\n    const emailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setRegisterErrorAC(''))\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const passwordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setRegisterErrorAC(''))\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const password2Change = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (error) dispatch(setRegisterErrorAC(''))\r\n        setPassword2(e.currentTarget.value)\r\n    }\r\n\r\n    const registerPress = () => {\r\n        if (email === '' && password === '' && password2 === '') {\r\n            dispatch(setRegisterErrorAC('Fill all fields!'))\r\n            return\r\n        }\r\n\r\n        if (password !== password2) {\r\n            dispatch(setRegisterErrorAC('Passwords do not match!'))\r\n            return\r\n        }\r\n\r\n        dispatch(registerTC(email, password))\r\n    }\r\n\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <Register\r\n            isBusy={isBusy}\r\n            email={email}\r\n            password={password}\r\n            password2={password2}\r\n            emailChange={emailChange}\r\n            passwordChange={passwordChange}\r\n            password2Change={password2Change}\r\n            registerPress={registerPress}\r\n            error={error}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Error404} from '../Error404/Error404';\r\nimport {ProfileContainer} from '../Profile/ProfileContainer';\r\nimport {PwdRestore} from '../PwdRestore/PwdRestore';\r\nimport {PwdNew} from '../PwdNew/PwdNew';\r\nimport {LoginContainer} from '../Login/LoginContainer';\r\nimport {Test} from '../Test/Test';\r\nimport {RegisterContainer} from '../Register/RegisterContainer';\r\n\r\n/*\r\nлогинизация\r\nрегистрация\r\nпрофайл\r\n404 (можно застилизовать заранее)\r\nвосстановление пароля\r\nввод нового пароля\r\nтестовая - отобразить/продемонстрировать все SuperКомпоненты\r\n */\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RESTORE: '/pwd-restore',\r\n    PASSWORD_NEW: '/pwd-new',\r\n    TEST: '/test',\r\n}\r\n\r\n\r\nexport function Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Test/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <LoginContainer/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <RegisterContainer/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\r\n                <Route path={PATH.PASSWORD_RESTORE} render={() => <PwdRestore/>}/>\r\n                <Route path={PATH.PASSWORD_NEW} render={() => <PwdNew/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {PATH} from '../c2-pages/Routes/Routes';\r\nimport {SuperNavLink} from '../c1-common/c91-SuperNavLink/SuperNavLink';\r\n\r\n\r\nexport function Header() {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center', color: 'red'}}>FRIDAY</h1>\r\n\r\n            <SuperNavLink goTo={PATH.LOGIN} text={'Login page'}/>\r\n            <SuperNavLink goTo={PATH.REGISTER} text={'Register page'}/>\r\n            <SuperNavLink goTo={PATH.PROFILE} text={'Profile page'}/>\r\n            <SuperNavLink goTo={PATH.PASSWORD_RESTORE} text={'Restore password page'}/>\r\n            <SuperNavLink goTo={PATH.PASSWORD_NEW} text={'New password page'}/>\r\n            <SuperNavLink goTo={PATH.TEST} text={'Test page'}/>\r\n            <SuperNavLink goTo={'Error404'} text={'Error page'}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Header } from './components/Header/Header';\r\nimport {Routes} from './components/c2-pages/Routes/Routes';\r\n\r\n\r\nexport function App() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n\r\n            <Routes/>\r\n        </div>\r\n    )\r\n}\r\n","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function passwordNewReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","const initialState = {}\n\ntype StateType = typeof initialState\n\ntype ActionType = any\n\nexport function passwordRestoreReducer(state: StateType = initialState, action: ActionType): StateType {\n    switch (action.type) {\n\n\n        default:\n            return state\n    }\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport {loginReducer} from './loginReducer'\nimport {profileReducer} from './profileReducer'\nimport {registerReducer} from './registerReducer'\nimport {passwordNewReducer} from './passwordNewReducer';\nimport {passwordRestoreReducer} from './passwordRestoreReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {appReducer} from './appReducer';\n\nconst reducers = combineReducers({\n    login: loginReducer,\n    register: registerReducer,\n    profile: profileReducer,\n    passwordNew: passwordNewReducer,\n    passwordRestore: passwordRestoreReducer,\n    app: appReducer,\n})\n\nconst store = createStore(reducers,applyMiddleware(thunkMiddleware))\n\nexport default store\n\nexport type AppRootStateType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {App} from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './bll/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n/*\r\nreportWebVitals();\r\n*/"],"sourceRoot":""}